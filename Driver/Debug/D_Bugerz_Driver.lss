
D_Bugerz_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000011f6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000002a  00800060  000011f6  0000128a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  0080008a  0080008a  000012b4  2**0
                  ALLOC
  3 .stab         0000288c  00000000  00000000  000012b4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001fb6  00000000  00000000  00003b40  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00005af6  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00005b08  2**2
                  CONTENTS, READONLY
  7 .debug_info   000004e6  00000000  00000000  00005b44  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000004a3  00000000  00000000  0000602a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  000064cd  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000196  00000000  00000000  000064e7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
       4:	0c 94 31 08 	jmp	0x1062	; 0x1062 <__vector_1>
       8:	0c 94 e6 07 	jmp	0xfcc	; 0xfcc <__vector_2>
       c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      54:	71 02       	muls	r23, r17
      56:	82 02       	muls	r24, r18
      58:	93 02       	muls	r25, r19
      5a:	a4 02       	muls	r26, r20
      5c:	b5 02       	muls	r27, r21
      5e:	c6 02       	muls	r28, r22
      60:	d7 02       	muls	r29, r23
      62:	e8 02       	muls	r30, r24
      64:	f9 02       	muls	r31, r25
      66:	0a 03       	fmul	r16, r18
      68:	4e 03       	fmul	r20, r22
      6a:	6b 03       	fmul	r22, r19
      6c:	88 03       	fmulsu	r16, r16
      6e:	a5 03       	fmuls	r18, r21
      70:	c2 03       	fmuls	r20, r18
      72:	df 03       	fmulsu	r21, r23
      74:	fc 03       	fmulsu	r23, r20
      76:	19 04       	cpc	r1, r9
      78:	36 04       	cpc	r3, r6
      7a:	53 04       	cpc	r5, r3
      7c:	b8 06       	cpc	r11, r24
      7e:	d5 06       	cpc	r13, r21
      80:	f2 06       	cpc	r15, r18
      82:	0f 07       	cpc	r16, r31
      84:	2c 07       	cpc	r18, r28
      86:	49 07       	cpc	r20, r25
      88:	66 07       	cpc	r22, r22
      8a:	83 07       	cpc	r24, r19
      8c:	a0 07       	cpc	r26, r16
      8e:	bd 07       	cpc	r27, r29

00000090 <__ctors_end>:
      90:	11 24       	eor	r1, r1
      92:	1f be       	out	0x3f, r1	; 63
      94:	cf e5       	ldi	r28, 0x5F	; 95
      96:	d8 e0       	ldi	r29, 0x08	; 8
      98:	de bf       	out	0x3e, r29	; 62
      9a:	cd bf       	out	0x3d, r28	; 61

0000009c <__do_copy_data>:
      9c:	10 e0       	ldi	r17, 0x00	; 0
      9e:	a0 e6       	ldi	r26, 0x60	; 96
      a0:	b0 e0       	ldi	r27, 0x00	; 0
      a2:	e6 ef       	ldi	r30, 0xF6	; 246
      a4:	f1 e1       	ldi	r31, 0x11	; 17
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x10>
      a8:	05 90       	lpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	aa 38       	cpi	r26, 0x8A	; 138
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0xc>

000000b2 <__do_clear_bss>:
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	aa e8       	ldi	r26, 0x8A	; 138
      b6:	b0 e0       	ldi	r27, 0x00	; 0
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	ab 38       	cpi	r26, 0x8B	; 139
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 da 08 	call	0x11b4	; 0x11b4 <main>
      c6:	0c 94 f9 08 	jmp	0x11f2	; 0x11f2 <_exit>

000000ca <__bad_interrupt>:
      ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <Dio_setPinDir>:
      ce:	cf 93       	push	r28
      d0:	df 93       	push	r29
      d2:	00 d0       	rcall	.+0      	; 0xd4 <Dio_setPinDir+0x6>
      d4:	cd b7       	in	r28, 0x3d	; 61
      d6:	de b7       	in	r29, 0x3e	; 62
      d8:	89 83       	std	Y+1, r24	; 0x01
      da:	6a 83       	std	Y+2, r22	; 0x02
      dc:	8a 81       	ldd	r24, Y+2	; 0x02
      de:	88 2f       	mov	r24, r24
      e0:	90 e0       	ldi	r25, 0x00	; 0
      e2:	00 97       	sbiw	r24, 0x00	; 0
      e4:	89 f1       	breq	.+98     	; 0x148 <Dio_setPinDir+0x7a>
      e6:	01 97       	sbiw	r24, 0x01	; 1
      e8:	09 f0       	breq	.+2      	; 0xec <Dio_setPinDir+0x1e>
      ea:	5d c0       	rjmp	.+186    	; 0x1a6 <Dio_setPinDir+0xd8>
      ec:	89 81       	ldd	r24, Y+1	; 0x01
      ee:	86 95       	lsr	r24
      f0:	86 95       	lsr	r24
      f2:	86 95       	lsr	r24
      f4:	88 2f       	mov	r24, r24
      f6:	90 e0       	ldi	r25, 0x00	; 0
      f8:	88 0f       	add	r24, r24
      fa:	99 1f       	adc	r25, r25
      fc:	80 5a       	subi	r24, 0xA0	; 160
      fe:	9f 4f       	sbci	r25, 0xFF	; 255
     100:	fc 01       	movw	r30, r24
     102:	80 81       	ld	r24, Z
     104:	91 81       	ldd	r25, Z+1	; 0x01
     106:	29 81       	ldd	r18, Y+1	; 0x01
     108:	26 95       	lsr	r18
     10a:	26 95       	lsr	r18
     10c:	26 95       	lsr	r18
     10e:	22 2f       	mov	r18, r18
     110:	30 e0       	ldi	r19, 0x00	; 0
     112:	22 0f       	add	r18, r18
     114:	33 1f       	adc	r19, r19
     116:	20 5a       	subi	r18, 0xA0	; 160
     118:	3f 4f       	sbci	r19, 0xFF	; 255
     11a:	f9 01       	movw	r30, r18
     11c:	20 81       	ld	r18, Z
     11e:	31 81       	ldd	r19, Z+1	; 0x01
     120:	f9 01       	movw	r30, r18
     122:	20 81       	ld	r18, Z
     124:	62 2f       	mov	r22, r18
     126:	29 81       	ldd	r18, Y+1	; 0x01
     128:	22 2f       	mov	r18, r18
     12a:	30 e0       	ldi	r19, 0x00	; 0
     12c:	a9 01       	movw	r20, r18
     12e:	47 70       	andi	r20, 0x07	; 7
     130:	55 27       	eor	r21, r21
     132:	21 e0       	ldi	r18, 0x01	; 1
     134:	30 e0       	ldi	r19, 0x00	; 0
     136:	02 c0       	rjmp	.+4      	; 0x13c <Dio_setPinDir+0x6e>
     138:	22 0f       	add	r18, r18
     13a:	33 1f       	adc	r19, r19
     13c:	4a 95       	dec	r20
     13e:	e2 f7       	brpl	.-8      	; 0x138 <Dio_setPinDir+0x6a>
     140:	26 2b       	or	r18, r22
     142:	fc 01       	movw	r30, r24
     144:	20 83       	st	Z, r18
     146:	2f c0       	rjmp	.+94     	; 0x1a6 <Dio_setPinDir+0xd8>
     148:	89 81       	ldd	r24, Y+1	; 0x01
     14a:	86 95       	lsr	r24
     14c:	86 95       	lsr	r24
     14e:	86 95       	lsr	r24
     150:	88 2f       	mov	r24, r24
     152:	90 e0       	ldi	r25, 0x00	; 0
     154:	88 0f       	add	r24, r24
     156:	99 1f       	adc	r25, r25
     158:	80 5a       	subi	r24, 0xA0	; 160
     15a:	9f 4f       	sbci	r25, 0xFF	; 255
     15c:	fc 01       	movw	r30, r24
     15e:	80 81       	ld	r24, Z
     160:	91 81       	ldd	r25, Z+1	; 0x01
     162:	29 81       	ldd	r18, Y+1	; 0x01
     164:	26 95       	lsr	r18
     166:	26 95       	lsr	r18
     168:	26 95       	lsr	r18
     16a:	22 2f       	mov	r18, r18
     16c:	30 e0       	ldi	r19, 0x00	; 0
     16e:	22 0f       	add	r18, r18
     170:	33 1f       	adc	r19, r19
     172:	20 5a       	subi	r18, 0xA0	; 160
     174:	3f 4f       	sbci	r19, 0xFF	; 255
     176:	f9 01       	movw	r30, r18
     178:	20 81       	ld	r18, Z
     17a:	31 81       	ldd	r19, Z+1	; 0x01
     17c:	f9 01       	movw	r30, r18
     17e:	20 81       	ld	r18, Z
     180:	62 2f       	mov	r22, r18
     182:	29 81       	ldd	r18, Y+1	; 0x01
     184:	22 2f       	mov	r18, r18
     186:	30 e0       	ldi	r19, 0x00	; 0
     188:	a9 01       	movw	r20, r18
     18a:	47 70       	andi	r20, 0x07	; 7
     18c:	55 27       	eor	r21, r21
     18e:	21 e0       	ldi	r18, 0x01	; 1
     190:	30 e0       	ldi	r19, 0x00	; 0
     192:	02 c0       	rjmp	.+4      	; 0x198 <Dio_setPinDir+0xca>
     194:	22 0f       	add	r18, r18
     196:	33 1f       	adc	r19, r19
     198:	4a 95       	dec	r20
     19a:	e2 f7       	brpl	.-8      	; 0x194 <Dio_setPinDir+0xc6>
     19c:	20 95       	com	r18
     19e:	26 23       	and	r18, r22
     1a0:	fc 01       	movw	r30, r24
     1a2:	20 83       	st	Z, r18
     1a4:	00 00       	nop
     1a6:	00 00       	nop
     1a8:	0f 90       	pop	r0
     1aa:	0f 90       	pop	r0
     1ac:	df 91       	pop	r29
     1ae:	cf 91       	pop	r28
     1b0:	08 95       	ret

000001b2 <Dio_setPinVal>:
			break;
	}
}

void Dio_setPinVal(u8 CopyPinNum,u8 CopyPinVal)
{
     1b2:	cf 93       	push	r28
     1b4:	df 93       	push	r29
     1b6:	00 d0       	rcall	.+0      	; 0x1b8 <Dio_setPinVal+0x6>
     1b8:	cd b7       	in	r28, 0x3d	; 61
     1ba:	de b7       	in	r29, 0x3e	; 62
     1bc:	89 83       	std	Y+1, r24	; 0x01
     1be:	6a 83       	std	Y+2, r22	; 0x02
	switch (CopyPinVal)
     1c0:	8a 81       	ldd	r24, Y+2	; 0x02
     1c2:	88 2f       	mov	r24, r24
     1c4:	90 e0       	ldi	r25, 0x00	; 0
     1c6:	81 30       	cpi	r24, 0x01	; 1
     1c8:	91 05       	cpc	r25, r1
     1ca:	39 f0       	breq	.+14     	; 0x1da <Dio_setPinVal+0x28>
     1cc:	82 30       	cpi	r24, 0x02	; 2
     1ce:	91 05       	cpc	r25, r1
     1d0:	09 f4       	brne	.+2      	; 0x1d4 <Dio_setPinVal+0x22>
     1d2:	60 c0       	rjmp	.+192    	; 0x294 <Dio_setPinVal+0xe2>
     1d4:	89 2b       	or	r24, r25
     1d6:	79 f1       	breq	.+94     	; 0x236 <Dio_setPinVal+0x84>
		case Status_Pin_Toggle:
				TOGGLE_BIT(*Arr_Port[CopyPinNum / 8 ],CopyPinNum % 8 );
			break;

		default :
			break;
     1d8:	8b c0       	rjmp	.+278    	; 0x2f0 <Dio_setPinVal+0x13e>
void Dio_setPinVal(u8 CopyPinNum,u8 CopyPinVal)
{
	switch (CopyPinVal)
	{
		case Status_Pin_High:
				SET_BIT(*Arr_Port[CopyPinNum / 8 ],CopyPinNum % 8 );
     1da:	89 81       	ldd	r24, Y+1	; 0x01
     1dc:	86 95       	lsr	r24
     1de:	86 95       	lsr	r24
     1e0:	86 95       	lsr	r24
     1e2:	88 2f       	mov	r24, r24
     1e4:	90 e0       	ldi	r25, 0x00	; 0
     1e6:	88 0f       	add	r24, r24
     1e8:	99 1f       	adc	r25, r25
     1ea:	88 59       	subi	r24, 0x98	; 152
     1ec:	9f 4f       	sbci	r25, 0xFF	; 255
     1ee:	fc 01       	movw	r30, r24
     1f0:	80 81       	ld	r24, Z
     1f2:	91 81       	ldd	r25, Z+1	; 0x01
     1f4:	29 81       	ldd	r18, Y+1	; 0x01
     1f6:	26 95       	lsr	r18
     1f8:	26 95       	lsr	r18
     1fa:	26 95       	lsr	r18
     1fc:	22 2f       	mov	r18, r18
     1fe:	30 e0       	ldi	r19, 0x00	; 0
     200:	22 0f       	add	r18, r18
     202:	33 1f       	adc	r19, r19
     204:	28 59       	subi	r18, 0x98	; 152
     206:	3f 4f       	sbci	r19, 0xFF	; 255
     208:	f9 01       	movw	r30, r18
     20a:	20 81       	ld	r18, Z
     20c:	31 81       	ldd	r19, Z+1	; 0x01
     20e:	f9 01       	movw	r30, r18
     210:	20 81       	ld	r18, Z
     212:	62 2f       	mov	r22, r18
     214:	29 81       	ldd	r18, Y+1	; 0x01
     216:	22 2f       	mov	r18, r18
     218:	30 e0       	ldi	r19, 0x00	; 0
     21a:	a9 01       	movw	r20, r18
     21c:	47 70       	andi	r20, 0x07	; 7
     21e:	55 27       	eor	r21, r21
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	02 c0       	rjmp	.+4      	; 0x22a <Dio_setPinVal+0x78>
     226:	22 0f       	add	r18, r18
     228:	33 1f       	adc	r19, r19
     22a:	4a 95       	dec	r20
     22c:	e2 f7       	brpl	.-8      	; 0x226 <Dio_setPinVal+0x74>
     22e:	26 2b       	or	r18, r22
     230:	fc 01       	movw	r30, r24
     232:	20 83       	st	Z, r18
			break;
     234:	5d c0       	rjmp	.+186    	; 0x2f0 <Dio_setPinVal+0x13e>

		case Status_Pin_Low:
				CLR_BIT(*Arr_Port[CopyPinNum / 8 ],CopyPinNum % 8 );
     236:	89 81       	ldd	r24, Y+1	; 0x01
     238:	86 95       	lsr	r24
     23a:	86 95       	lsr	r24
     23c:	86 95       	lsr	r24
     23e:	88 2f       	mov	r24, r24
     240:	90 e0       	ldi	r25, 0x00	; 0
     242:	88 0f       	add	r24, r24
     244:	99 1f       	adc	r25, r25
     246:	88 59       	subi	r24, 0x98	; 152
     248:	9f 4f       	sbci	r25, 0xFF	; 255
     24a:	fc 01       	movw	r30, r24
     24c:	80 81       	ld	r24, Z
     24e:	91 81       	ldd	r25, Z+1	; 0x01
     250:	29 81       	ldd	r18, Y+1	; 0x01
     252:	26 95       	lsr	r18
     254:	26 95       	lsr	r18
     256:	26 95       	lsr	r18
     258:	22 2f       	mov	r18, r18
     25a:	30 e0       	ldi	r19, 0x00	; 0
     25c:	22 0f       	add	r18, r18
     25e:	33 1f       	adc	r19, r19
     260:	28 59       	subi	r18, 0x98	; 152
     262:	3f 4f       	sbci	r19, 0xFF	; 255
     264:	f9 01       	movw	r30, r18
     266:	20 81       	ld	r18, Z
     268:	31 81       	ldd	r19, Z+1	; 0x01
     26a:	f9 01       	movw	r30, r18
     26c:	20 81       	ld	r18, Z
     26e:	62 2f       	mov	r22, r18
     270:	29 81       	ldd	r18, Y+1	; 0x01
     272:	22 2f       	mov	r18, r18
     274:	30 e0       	ldi	r19, 0x00	; 0
     276:	a9 01       	movw	r20, r18
     278:	47 70       	andi	r20, 0x07	; 7
     27a:	55 27       	eor	r21, r21
     27c:	21 e0       	ldi	r18, 0x01	; 1
     27e:	30 e0       	ldi	r19, 0x00	; 0
     280:	02 c0       	rjmp	.+4      	; 0x286 <Dio_setPinVal+0xd4>
     282:	22 0f       	add	r18, r18
     284:	33 1f       	adc	r19, r19
     286:	4a 95       	dec	r20
     288:	e2 f7       	brpl	.-8      	; 0x282 <Dio_setPinVal+0xd0>
     28a:	20 95       	com	r18
     28c:	26 23       	and	r18, r22
     28e:	fc 01       	movw	r30, r24
     290:	20 83       	st	Z, r18
			break;
     292:	2e c0       	rjmp	.+92     	; 0x2f0 <Dio_setPinVal+0x13e>

		case Status_Pin_Toggle:
				TOGGLE_BIT(*Arr_Port[CopyPinNum / 8 ],CopyPinNum % 8 );
     294:	89 81       	ldd	r24, Y+1	; 0x01
     296:	86 95       	lsr	r24
     298:	86 95       	lsr	r24
     29a:	86 95       	lsr	r24
     29c:	88 2f       	mov	r24, r24
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	88 0f       	add	r24, r24
     2a2:	99 1f       	adc	r25, r25
     2a4:	88 59       	subi	r24, 0x98	; 152
     2a6:	9f 4f       	sbci	r25, 0xFF	; 255
     2a8:	fc 01       	movw	r30, r24
     2aa:	80 81       	ld	r24, Z
     2ac:	91 81       	ldd	r25, Z+1	; 0x01
     2ae:	29 81       	ldd	r18, Y+1	; 0x01
     2b0:	26 95       	lsr	r18
     2b2:	26 95       	lsr	r18
     2b4:	26 95       	lsr	r18
     2b6:	22 2f       	mov	r18, r18
     2b8:	30 e0       	ldi	r19, 0x00	; 0
     2ba:	22 0f       	add	r18, r18
     2bc:	33 1f       	adc	r19, r19
     2be:	28 59       	subi	r18, 0x98	; 152
     2c0:	3f 4f       	sbci	r19, 0xFF	; 255
     2c2:	f9 01       	movw	r30, r18
     2c4:	20 81       	ld	r18, Z
     2c6:	31 81       	ldd	r19, Z+1	; 0x01
     2c8:	f9 01       	movw	r30, r18
     2ca:	20 81       	ld	r18, Z
     2cc:	62 2f       	mov	r22, r18
     2ce:	29 81       	ldd	r18, Y+1	; 0x01
     2d0:	22 2f       	mov	r18, r18
     2d2:	30 e0       	ldi	r19, 0x00	; 0
     2d4:	a9 01       	movw	r20, r18
     2d6:	47 70       	andi	r20, 0x07	; 7
     2d8:	55 27       	eor	r21, r21
     2da:	21 e0       	ldi	r18, 0x01	; 1
     2dc:	30 e0       	ldi	r19, 0x00	; 0
     2de:	02 c0       	rjmp	.+4      	; 0x2e4 <Dio_setPinVal+0x132>
     2e0:	22 0f       	add	r18, r18
     2e2:	33 1f       	adc	r19, r19
     2e4:	4a 95       	dec	r20
     2e6:	e2 f7       	brpl	.-8      	; 0x2e0 <Dio_setPinVal+0x12e>
     2e8:	26 27       	eor	r18, r22
     2ea:	fc 01       	movw	r30, r24
     2ec:	20 83       	st	Z, r18
			break;
     2ee:	00 00       	nop

		default :
			break;
	}
}
     2f0:	00 00       	nop
     2f2:	0f 90       	pop	r0
     2f4:	0f 90       	pop	r0
     2f6:	df 91       	pop	r29
     2f8:	cf 91       	pop	r28
     2fa:	08 95       	ret

000002fc <Dio_getPinVal>:

Std_Return Dio_getPinVal(u8 CopyPinNum)
{
     2fc:	cf 93       	push	r28
     2fe:	df 93       	push	r29
     300:	00 d0       	rcall	.+0      	; 0x302 <Dio_getPinVal+0x6>
     302:	cd b7       	in	r28, 0x3d	; 61
     304:	de b7       	in	r29, 0x3e	; 62
     306:	8a 83       	std	Y+2, r24	; 0x02
	u8 Ret = 0;
     308:	19 82       	std	Y+1, r1	; 0x01
	Ret = GET_BIT(*Arr_Pin[CopyPinNum / 8 ],CopyPinNum % 8 );
     30a:	8a 81       	ldd	r24, Y+2	; 0x02
     30c:	86 95       	lsr	r24
     30e:	86 95       	lsr	r24
     310:	86 95       	lsr	r24
     312:	88 2f       	mov	r24, r24
     314:	90 e0       	ldi	r25, 0x00	; 0
     316:	88 0f       	add	r24, r24
     318:	99 1f       	adc	r25, r25
     31a:	80 59       	subi	r24, 0x90	; 144
     31c:	9f 4f       	sbci	r25, 0xFF	; 255
     31e:	fc 01       	movw	r30, r24
     320:	80 81       	ld	r24, Z
     322:	91 81       	ldd	r25, Z+1	; 0x01
     324:	fc 01       	movw	r30, r24
     326:	80 81       	ld	r24, Z
     328:	88 2f       	mov	r24, r24
     32a:	90 e0       	ldi	r25, 0x00	; 0
     32c:	2a 81       	ldd	r18, Y+2	; 0x02
     32e:	22 2f       	mov	r18, r18
     330:	30 e0       	ldi	r19, 0x00	; 0
     332:	27 70       	andi	r18, 0x07	; 7
     334:	33 27       	eor	r19, r19
     336:	02 c0       	rjmp	.+4      	; 0x33c <Dio_getPinVal+0x40>
     338:	95 95       	asr	r25
     33a:	87 95       	ror	r24
     33c:	2a 95       	dec	r18
     33e:	e2 f7       	brpl	.-8      	; 0x338 <Dio_getPinVal+0x3c>
     340:	81 70       	andi	r24, 0x01	; 1
     342:	89 83       	std	Y+1, r24	; 0x01
	return Ret;
     344:	89 81       	ldd	r24, Y+1	; 0x01
}
     346:	0f 90       	pop	r0
     348:	0f 90       	pop	r0
     34a:	df 91       	pop	r29
     34c:	cf 91       	pop	r28
     34e:	08 95       	ret

00000350 <Dio_setPortDir>:



/* -------------------- Section : Ports Functions Definaions -------------------- */
void Dio_setPortDir(u8 CopyPortNum,u8 CopyPinDir)
{
     350:	cf 93       	push	r28
     352:	df 93       	push	r29
     354:	00 d0       	rcall	.+0      	; 0x356 <Dio_setPortDir+0x6>
     356:	cd b7       	in	r28, 0x3d	; 61
     358:	de b7       	in	r29, 0x3e	; 62
     35a:	89 83       	std	Y+1, r24	; 0x01
     35c:	6a 83       	std	Y+2, r22	; 0x02
	*Arr_DDr[CopyPortNum] = CopyPinDir;
     35e:	89 81       	ldd	r24, Y+1	; 0x01
     360:	88 2f       	mov	r24, r24
     362:	90 e0       	ldi	r25, 0x00	; 0
     364:	88 0f       	add	r24, r24
     366:	99 1f       	adc	r25, r25
     368:	80 5a       	subi	r24, 0xA0	; 160
     36a:	9f 4f       	sbci	r25, 0xFF	; 255
     36c:	fc 01       	movw	r30, r24
     36e:	80 81       	ld	r24, Z
     370:	91 81       	ldd	r25, Z+1	; 0x01
     372:	2a 81       	ldd	r18, Y+2	; 0x02
     374:	fc 01       	movw	r30, r24
     376:	20 83       	st	Z, r18
}
     378:	00 00       	nop
     37a:	0f 90       	pop	r0
     37c:	0f 90       	pop	r0
     37e:	df 91       	pop	r29
     380:	cf 91       	pop	r28
     382:	08 95       	ret

00000384 <Dio_setPortVal>:

void Dio_setPortVal(u8 CopyPortNum,u8 CopyPinVal)
{
     384:	cf 93       	push	r28
     386:	df 93       	push	r29
     388:	00 d0       	rcall	.+0      	; 0x38a <Dio_setPortVal+0x6>
     38a:	cd b7       	in	r28, 0x3d	; 61
     38c:	de b7       	in	r29, 0x3e	; 62
     38e:	89 83       	std	Y+1, r24	; 0x01
     390:	6a 83       	std	Y+2, r22	; 0x02
	*Arr_Port[CopyPortNum] = CopyPinVal;
     392:	89 81       	ldd	r24, Y+1	; 0x01
     394:	88 2f       	mov	r24, r24
     396:	90 e0       	ldi	r25, 0x00	; 0
     398:	88 0f       	add	r24, r24
     39a:	99 1f       	adc	r25, r25
     39c:	88 59       	subi	r24, 0x98	; 152
     39e:	9f 4f       	sbci	r25, 0xFF	; 255
     3a0:	fc 01       	movw	r30, r24
     3a2:	80 81       	ld	r24, Z
     3a4:	91 81       	ldd	r25, Z+1	; 0x01
     3a6:	2a 81       	ldd	r18, Y+2	; 0x02
     3a8:	fc 01       	movw	r30, r24
     3aa:	20 83       	st	Z, r18
}
     3ac:	00 00       	nop
     3ae:	0f 90       	pop	r0
     3b0:	0f 90       	pop	r0
     3b2:	df 91       	pop	r29
     3b4:	cf 91       	pop	r28
     3b6:	08 95       	ret

000003b8 <Dio_getPortVal>:
Std_Return Dio_getPortVal(u8 CopyPortNum)
{
     3b8:	cf 93       	push	r28
     3ba:	df 93       	push	r29
     3bc:	00 d0       	rcall	.+0      	; 0x3be <Dio_getPortVal+0x6>
     3be:	cd b7       	in	r28, 0x3d	; 61
     3c0:	de b7       	in	r29, 0x3e	; 62
     3c2:	8a 83       	std	Y+2, r24	; 0x02
	u8 Ret = 0;
     3c4:	19 82       	std	Y+1, r1	; 0x01
	Ret = *Arr_Pin[CopyPortNum];
     3c6:	8a 81       	ldd	r24, Y+2	; 0x02
     3c8:	88 2f       	mov	r24, r24
     3ca:	90 e0       	ldi	r25, 0x00	; 0
     3cc:	88 0f       	add	r24, r24
     3ce:	99 1f       	adc	r25, r25
     3d0:	80 59       	subi	r24, 0x90	; 144
     3d2:	9f 4f       	sbci	r25, 0xFF	; 255
     3d4:	fc 01       	movw	r30, r24
     3d6:	80 81       	ld	r24, Z
     3d8:	91 81       	ldd	r25, Z+1	; 0x01
     3da:	fc 01       	movw	r30, r24
     3dc:	80 81       	ld	r24, Z
     3de:	89 83       	std	Y+1, r24	; 0x01
	return Ret;
     3e0:	89 81       	ldd	r24, Y+1	; 0x01
}
     3e2:	0f 90       	pop	r0
     3e4:	0f 90       	pop	r0
     3e6:	df 91       	pop	r29
     3e8:	cf 91       	pop	r28
     3ea:	08 95       	ret

000003ec <Bcd_7segInit_4Bit>:
 *      Author: ziad
 */
#include "bcd_Init.h"

void Bcd_7segInit_4Bit(BCD Copy7seg)
{
     3ec:	cf 93       	push	r28
     3ee:	df 93       	push	r29
     3f0:	00 d0       	rcall	.+0      	; 0x3f2 <Bcd_7segInit_4Bit+0x6>
     3f2:	00 d0       	rcall	.+0      	; 0x3f4 <Bcd_7segInit_4Bit+0x8>
     3f4:	cd b7       	in	r28, 0x3d	; 61
     3f6:	de b7       	in	r29, 0x3e	; 62
     3f8:	69 83       	std	Y+1, r22	; 0x01
     3fa:	7a 83       	std	Y+2, r23	; 0x02
     3fc:	8b 83       	std	Y+3, r24	; 0x03
     3fe:	9c 83       	std	Y+4, r25	; 0x04
	Dio_setPinDir(Copy7seg.Pin_1, Direction_Pin_Output);
     400:	89 81       	ldd	r24, Y+1	; 0x01
     402:	61 e0       	ldi	r22, 0x01	; 1
     404:	0e 94 67 00 	call	0xce	; 0xce <Dio_setPinDir>
	Dio_setPinDir(Copy7seg.Pin_2, Direction_Pin_Output);
     408:	8a 81       	ldd	r24, Y+2	; 0x02
     40a:	61 e0       	ldi	r22, 0x01	; 1
     40c:	0e 94 67 00 	call	0xce	; 0xce <Dio_setPinDir>
	Dio_setPinDir(Copy7seg.Pin_3, Direction_Pin_Output);
     410:	8b 81       	ldd	r24, Y+3	; 0x03
     412:	61 e0       	ldi	r22, 0x01	; 1
     414:	0e 94 67 00 	call	0xce	; 0xce <Dio_setPinDir>
	Dio_setPinDir(Copy7seg.Pin_4, Direction_Pin_Output);
     418:	8c 81       	ldd	r24, Y+4	; 0x04
     41a:	61 e0       	ldi	r22, 0x01	; 1
     41c:	0e 94 67 00 	call	0xce	; 0xce <Dio_setPinDir>
}
     420:	00 00       	nop
     422:	0f 90       	pop	r0
     424:	0f 90       	pop	r0
     426:	0f 90       	pop	r0
     428:	0f 90       	pop	r0
     42a:	df 91       	pop	r29
     42c:	cf 91       	pop	r28
     42e:	08 95       	ret

00000430 <Bcd_7segInit>:


void Bcd_7segInit(Seg Copy7seg)
{
     430:	cf 93       	push	r28
     432:	df 93       	push	r29
     434:	cd b7       	in	r28, 0x3d	; 61
     436:	de b7       	in	r29, 0x3e	; 62
     438:	27 97       	sbiw	r28, 0x07	; 7
     43a:	0f b6       	in	r0, 0x3f	; 63
     43c:	f8 94       	cli
     43e:	de bf       	out	0x3e, r29	; 62
     440:	0f be       	out	0x3f, r0	; 63
     442:	cd bf       	out	0x3d, r28	; 61
     444:	29 83       	std	Y+1, r18	; 0x01
     446:	3a 83       	std	Y+2, r19	; 0x02
     448:	4b 83       	std	Y+3, r20	; 0x03
     44a:	5c 83       	std	Y+4, r21	; 0x04
     44c:	6d 83       	std	Y+5, r22	; 0x05
     44e:	7e 83       	std	Y+6, r23	; 0x06
     450:	8f 83       	std	Y+7, r24	; 0x07

		Dio_setPinDir(Copy7seg.Pin_1, Direction_Pin_Output);
     452:	89 81       	ldd	r24, Y+1	; 0x01
     454:	61 e0       	ldi	r22, 0x01	; 1
     456:	0e 94 67 00 	call	0xce	; 0xce <Dio_setPinDir>
		Dio_setPinDir(Copy7seg.Pin_2, Direction_Pin_Output);
     45a:	8a 81       	ldd	r24, Y+2	; 0x02
     45c:	61 e0       	ldi	r22, 0x01	; 1
     45e:	0e 94 67 00 	call	0xce	; 0xce <Dio_setPinDir>
		Dio_setPinDir(Copy7seg.Pin_3, Direction_Pin_Output);
     462:	8b 81       	ldd	r24, Y+3	; 0x03
     464:	61 e0       	ldi	r22, 0x01	; 1
     466:	0e 94 67 00 	call	0xce	; 0xce <Dio_setPinDir>
		Dio_setPinDir(Copy7seg.Pin_4, Direction_Pin_Output);
     46a:	8c 81       	ldd	r24, Y+4	; 0x04
     46c:	61 e0       	ldi	r22, 0x01	; 1
     46e:	0e 94 67 00 	call	0xce	; 0xce <Dio_setPinDir>
		Dio_setPinDir(Copy7seg.Pin_5, Direction_Pin_Output);
     472:	8d 81       	ldd	r24, Y+5	; 0x05
     474:	61 e0       	ldi	r22, 0x01	; 1
     476:	0e 94 67 00 	call	0xce	; 0xce <Dio_setPinDir>
		Dio_setPinDir(Copy7seg.Pin_6, Direction_Pin_Output);
     47a:	8e 81       	ldd	r24, Y+6	; 0x06
     47c:	61 e0       	ldi	r22, 0x01	; 1
     47e:	0e 94 67 00 	call	0xce	; 0xce <Dio_setPinDir>
		Dio_setPinDir(Copy7seg.Pin_7, Direction_Pin_Output);
     482:	8f 81       	ldd	r24, Y+7	; 0x07
     484:	61 e0       	ldi	r22, 0x01	; 1
     486:	0e 94 67 00 	call	0xce	; 0xce <Dio_setPinDir>
}
     48a:	00 00       	nop
     48c:	27 96       	adiw	r28, 0x07	; 7
     48e:	0f b6       	in	r0, 0x3f	; 63
     490:	f8 94       	cli
     492:	de bf       	out	0x3e, r29	; 62
     494:	0f be       	out	0x3f, r0	; 63
     496:	cd bf       	out	0x3d, r28	; 61
     498:	df 91       	pop	r29
     49a:	cf 91       	pop	r28
     49c:	08 95       	ret

0000049e <Bcd_7segWriteNum>:


void Bcd_7segWriteNum(BCD Copy7segNum , u8 CopyNumber)
{
     49e:	cf 93       	push	r28
     4a0:	df 93       	push	r29
     4a2:	00 d0       	rcall	.+0      	; 0x4a4 <Bcd_7segWriteNum+0x6>
     4a4:	00 d0       	rcall	.+0      	; 0x4a6 <Bcd_7segWriteNum+0x8>
     4a6:	1f 92       	push	r1
     4a8:	cd b7       	in	r28, 0x3d	; 61
     4aa:	de b7       	in	r29, 0x3e	; 62
     4ac:	69 83       	std	Y+1, r22	; 0x01
     4ae:	7a 83       	std	Y+2, r23	; 0x02
     4b0:	8b 83       	std	Y+3, r24	; 0x03
     4b2:	9c 83       	std	Y+4, r25	; 0x04
     4b4:	4d 83       	std	Y+5, r20	; 0x05
	switch (CopyNumber) {
     4b6:	8d 81       	ldd	r24, Y+5	; 0x05
     4b8:	88 2f       	mov	r24, r24
     4ba:	90 e0       	ldi	r25, 0x00	; 0
     4bc:	09 2e       	mov	r0, r25
     4be:	00 0c       	add	r0, r0
     4c0:	aa 0b       	sbc	r26, r26
     4c2:	bb 0b       	sbc	r27, r27
     4c4:	40 e0       	ldi	r20, 0x00	; 0
     4c6:	50 e0       	ldi	r21, 0x00	; 0
     4c8:	29 e0       	ldi	r18, 0x09	; 9
     4ca:	30 e0       	ldi	r19, 0x00	; 0
     4cc:	84 1b       	sub	r24, r20
     4ce:	95 0b       	sbc	r25, r21
     4d0:	28 17       	cp	r18, r24
     4d2:	39 07       	cpc	r19, r25
     4d4:	08 f4       	brcc	.+2      	; 0x4d8 <Bcd_7segWriteNum+0x3a>
     4d6:	af c0       	rjmp	.+350    	; 0x636 <Bcd_7segWriteNum+0x198>
     4d8:	86 5d       	subi	r24, 0xD6	; 214
     4da:	9f 4f       	sbci	r25, 0xFF	; 255
     4dc:	fc 01       	movw	r30, r24
     4de:	0c 94 f3 08 	jmp	0x11e6	; 0x11e6 <__tablejump2__>
		case 0:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_Low);	// A = 0
     4e2:	89 81       	ldd	r24, Y+1	; 0x01
     4e4:	60 e0       	ldi	r22, 0x00	; 0
     4e6:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_Low);	// B = 0
     4ea:	8a 81       	ldd	r24, Y+2	; 0x02
     4ec:	60 e0       	ldi	r22, 0x00	; 0
     4ee:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_Low);	// C = 0
     4f2:	8b 81       	ldd	r24, Y+3	; 0x03
     4f4:	60 e0       	ldi	r22, 0x00	; 0
     4f6:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_Low);	// D = 0
     4fa:	8c 81       	ldd	r24, Y+4	; 0x04
     4fc:	60 e0       	ldi	r22, 0x00	; 0
     4fe:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
			break;
     502:	9a c0       	rjmp	.+308    	; 0x638 <Bcd_7segWriteNum+0x19a>
		case 1:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_High);	// A = 1
     504:	89 81       	ldd	r24, Y+1	; 0x01
     506:	61 e0       	ldi	r22, 0x01	; 1
     508:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_Low);	// B = 0
     50c:	8a 81       	ldd	r24, Y+2	; 0x02
     50e:	60 e0       	ldi	r22, 0x00	; 0
     510:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_Low);	// C = 0
     514:	8b 81       	ldd	r24, Y+3	; 0x03
     516:	60 e0       	ldi	r22, 0x00	; 0
     518:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_Low);	// D = 0
     51c:	8c 81       	ldd	r24, Y+4	; 0x04
     51e:	60 e0       	ldi	r22, 0x00	; 0
     520:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
			break;
     524:	89 c0       	rjmp	.+274    	; 0x638 <Bcd_7segWriteNum+0x19a>
		case 2:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_Low);	// A = 0
     526:	89 81       	ldd	r24, Y+1	; 0x01
     528:	60 e0       	ldi	r22, 0x00	; 0
     52a:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_High);	// B = 1
     52e:	8a 81       	ldd	r24, Y+2	; 0x02
     530:	61 e0       	ldi	r22, 0x01	; 1
     532:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_Low);	// C = 0
     536:	8b 81       	ldd	r24, Y+3	; 0x03
     538:	60 e0       	ldi	r22, 0x00	; 0
     53a:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_Low);	// D = 0
     53e:	8c 81       	ldd	r24, Y+4	; 0x04
     540:	60 e0       	ldi	r22, 0x00	; 0
     542:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
			break;
     546:	78 c0       	rjmp	.+240    	; 0x638 <Bcd_7segWriteNum+0x19a>
		case 3:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_High);	// A = 1
     548:	89 81       	ldd	r24, Y+1	; 0x01
     54a:	61 e0       	ldi	r22, 0x01	; 1
     54c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_High);	// B = 1
     550:	8a 81       	ldd	r24, Y+2	; 0x02
     552:	61 e0       	ldi	r22, 0x01	; 1
     554:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_Low);	// C = 0
     558:	8b 81       	ldd	r24, Y+3	; 0x03
     55a:	60 e0       	ldi	r22, 0x00	; 0
     55c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_Low);	// D = 0
     560:	8c 81       	ldd	r24, Y+4	; 0x04
     562:	60 e0       	ldi	r22, 0x00	; 0
     564:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
			break;
     568:	67 c0       	rjmp	.+206    	; 0x638 <Bcd_7segWriteNum+0x19a>
		case 4:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_Low);	// A = 0
     56a:	89 81       	ldd	r24, Y+1	; 0x01
     56c:	60 e0       	ldi	r22, 0x00	; 0
     56e:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_Low);	// B = 0
     572:	8a 81       	ldd	r24, Y+2	; 0x02
     574:	60 e0       	ldi	r22, 0x00	; 0
     576:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_High);	// C = 1
     57a:	8b 81       	ldd	r24, Y+3	; 0x03
     57c:	61 e0       	ldi	r22, 0x01	; 1
     57e:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_Low);	// D = 0
     582:	8c 81       	ldd	r24, Y+4	; 0x04
     584:	60 e0       	ldi	r22, 0x00	; 0
     586:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
			break;
     58a:	56 c0       	rjmp	.+172    	; 0x638 <Bcd_7segWriteNum+0x19a>
		case 5:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_High);	// A = 1
     58c:	89 81       	ldd	r24, Y+1	; 0x01
     58e:	61 e0       	ldi	r22, 0x01	; 1
     590:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_Low);	// B = 0
     594:	8a 81       	ldd	r24, Y+2	; 0x02
     596:	60 e0       	ldi	r22, 0x00	; 0
     598:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_High);	// C = 1
     59c:	8b 81       	ldd	r24, Y+3	; 0x03
     59e:	61 e0       	ldi	r22, 0x01	; 1
     5a0:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_Low);	// D = 0
     5a4:	8c 81       	ldd	r24, Y+4	; 0x04
     5a6:	60 e0       	ldi	r22, 0x00	; 0
     5a8:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
			break;
     5ac:	45 c0       	rjmp	.+138    	; 0x638 <Bcd_7segWriteNum+0x19a>
		case 6:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_Low);	// A = 0
     5ae:	89 81       	ldd	r24, Y+1	; 0x01
     5b0:	60 e0       	ldi	r22, 0x00	; 0
     5b2:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_High);	// B = 1
     5b6:	8a 81       	ldd	r24, Y+2	; 0x02
     5b8:	61 e0       	ldi	r22, 0x01	; 1
     5ba:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_High);	// C = 1
     5be:	8b 81       	ldd	r24, Y+3	; 0x03
     5c0:	61 e0       	ldi	r22, 0x01	; 1
     5c2:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_Low);	// D = 0
     5c6:	8c 81       	ldd	r24, Y+4	; 0x04
     5c8:	60 e0       	ldi	r22, 0x00	; 0
     5ca:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
			break;
     5ce:	34 c0       	rjmp	.+104    	; 0x638 <Bcd_7segWriteNum+0x19a>
		case 7:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_High);	// A = 1
     5d0:	89 81       	ldd	r24, Y+1	; 0x01
     5d2:	61 e0       	ldi	r22, 0x01	; 1
     5d4:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_High);	// B = 1
     5d8:	8a 81       	ldd	r24, Y+2	; 0x02
     5da:	61 e0       	ldi	r22, 0x01	; 1
     5dc:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_High);	// C = 1
     5e0:	8b 81       	ldd	r24, Y+3	; 0x03
     5e2:	61 e0       	ldi	r22, 0x01	; 1
     5e4:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_Low);	// D = 0
     5e8:	8c 81       	ldd	r24, Y+4	; 0x04
     5ea:	60 e0       	ldi	r22, 0x00	; 0
     5ec:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
			break;
     5f0:	23 c0       	rjmp	.+70     	; 0x638 <Bcd_7segWriteNum+0x19a>
		case 8:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_Low);	// A = 0
     5f2:	89 81       	ldd	r24, Y+1	; 0x01
     5f4:	60 e0       	ldi	r22, 0x00	; 0
     5f6:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_Low);	// B = 0
     5fa:	8a 81       	ldd	r24, Y+2	; 0x02
     5fc:	60 e0       	ldi	r22, 0x00	; 0
     5fe:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_Low);	// C = 0
     602:	8b 81       	ldd	r24, Y+3	; 0x03
     604:	60 e0       	ldi	r22, 0x00	; 0
     606:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_High);	// D = 1
     60a:	8c 81       	ldd	r24, Y+4	; 0x04
     60c:	61 e0       	ldi	r22, 0x01	; 1
     60e:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
			break;
     612:	12 c0       	rjmp	.+36     	; 0x638 <Bcd_7segWriteNum+0x19a>
		case 9:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_High);	// A = 1
     614:	89 81       	ldd	r24, Y+1	; 0x01
     616:	61 e0       	ldi	r22, 0x01	; 1
     618:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_Low);	// B = 0
     61c:	8a 81       	ldd	r24, Y+2	; 0x02
     61e:	60 e0       	ldi	r22, 0x00	; 0
     620:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_Low);	// C = 0
     624:	8b 81       	ldd	r24, Y+3	; 0x03
     626:	60 e0       	ldi	r22, 0x00	; 0
     628:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_High);	// D = 1
     62c:	8c 81       	ldd	r24, Y+4	; 0x04
     62e:	61 e0       	ldi	r22, 0x01	; 1
     630:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
			break;
     634:	01 c0       	rjmp	.+2      	; 0x638 <Bcd_7segWriteNum+0x19a>
		default:
			break;
     636:	00 00       	nop
	}
}
     638:	00 00       	nop
     63a:	0f 90       	pop	r0
     63c:	0f 90       	pop	r0
     63e:	0f 90       	pop	r0
     640:	0f 90       	pop	r0
     642:	0f 90       	pop	r0
     644:	df 91       	pop	r29
     646:	cf 91       	pop	r28
     648:	08 95       	ret

0000064a <Bcd_7segWriteNumAnode>:

void Bcd_7segWriteNumAnode(Seg Copy7segNum , u8 CopyNumber)
{
     64a:	0f 93       	push	r16
     64c:	cf 93       	push	r28
     64e:	df 93       	push	r29
     650:	cd b7       	in	r28, 0x3d	; 61
     652:	de b7       	in	r29, 0x3e	; 62
     654:	28 97       	sbiw	r28, 0x08	; 8
     656:	0f b6       	in	r0, 0x3f	; 63
     658:	f8 94       	cli
     65a:	de bf       	out	0x3e, r29	; 62
     65c:	0f be       	out	0x3f, r0	; 63
     65e:	cd bf       	out	0x3d, r28	; 61
     660:	29 83       	std	Y+1, r18	; 0x01
     662:	3a 83       	std	Y+2, r19	; 0x02
     664:	4b 83       	std	Y+3, r20	; 0x03
     666:	5c 83       	std	Y+4, r21	; 0x04
     668:	6d 83       	std	Y+5, r22	; 0x05
     66a:	7e 83       	std	Y+6, r23	; 0x06
     66c:	8f 83       	std	Y+7, r24	; 0x07
     66e:	08 87       	std	Y+8, r16	; 0x08
	switch (CopyNumber) {
     670:	88 85       	ldd	r24, Y+8	; 0x08
     672:	88 2f       	mov	r24, r24
     674:	90 e0       	ldi	r25, 0x00	; 0
     676:	09 2e       	mov	r0, r25
     678:	00 0c       	add	r0, r0
     67a:	aa 0b       	sbc	r26, r26
     67c:	bb 0b       	sbc	r27, r27
     67e:	40 e0       	ldi	r20, 0x00	; 0
     680:	50 e0       	ldi	r21, 0x00	; 0
     682:	29 e0       	ldi	r18, 0x09	; 9
     684:	30 e0       	ldi	r19, 0x00	; 0
     686:	84 1b       	sub	r24, r20
     688:	95 0b       	sbc	r25, r21
     68a:	28 17       	cp	r18, r24
     68c:	39 07       	cpc	r19, r25
     68e:	08 f4       	brcc	.+2      	; 0x692 <Bcd_7segWriteNumAnode+0x48>
     690:	27 c1       	rjmp	.+590    	; 0x8e0 <__stack+0x81>
     692:	8c 5c       	subi	r24, 0xCC	; 204
     694:	9f 4f       	sbci	r25, 0xFF	; 255
     696:	fc 01       	movw	r30, r24
     698:	0c 94 f3 08 	jmp	0x11e6	; 0x11e6 <__tablejump2__>
		case 0:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_Low);	// A = 0
     69c:	89 81       	ldd	r24, Y+1	; 0x01
     69e:	60 e0       	ldi	r22, 0x00	; 0
     6a0:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_Low);	// B = 0
     6a4:	8a 81       	ldd	r24, Y+2	; 0x02
     6a6:	60 e0       	ldi	r22, 0x00	; 0
     6a8:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_Low);	// C = 0
     6ac:	8b 81       	ldd	r24, Y+3	; 0x03
     6ae:	60 e0       	ldi	r22, 0x00	; 0
     6b0:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_Low);	// D = 0
     6b4:	8c 81       	ldd	r24, Y+4	; 0x04
     6b6:	60 e0       	ldi	r22, 0x00	; 0
     6b8:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_5, Status_Pin_Low);	// E = 0
     6bc:	8d 81       	ldd	r24, Y+5	; 0x05
     6be:	60 e0       	ldi	r22, 0x00	; 0
     6c0:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_6, Status_Pin_Low);	// F = 0
     6c4:	8e 81       	ldd	r24, Y+6	; 0x06
     6c6:	60 e0       	ldi	r22, 0x00	; 0
     6c8:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_7, Status_Pin_High);	// G = 1
     6cc:	8f 81       	ldd	r24, Y+7	; 0x07
     6ce:	61 e0       	ldi	r22, 0x01	; 1
     6d0:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
			break;
     6d4:	06 c1       	rjmp	.+524    	; 0x8e2 <__stack+0x83>
		case 1:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_High);	// A = 1
     6d6:	89 81       	ldd	r24, Y+1	; 0x01
     6d8:	61 e0       	ldi	r22, 0x01	; 1
     6da:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_Low);	// B = 0
     6de:	8a 81       	ldd	r24, Y+2	; 0x02
     6e0:	60 e0       	ldi	r22, 0x00	; 0
     6e2:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_Low);	// C = 0
     6e6:	8b 81       	ldd	r24, Y+3	; 0x03
     6e8:	60 e0       	ldi	r22, 0x00	; 0
     6ea:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_High);	// D = 1
     6ee:	8c 81       	ldd	r24, Y+4	; 0x04
     6f0:	61 e0       	ldi	r22, 0x01	; 1
     6f2:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_5, Status_Pin_High);	// E = 1
     6f6:	8d 81       	ldd	r24, Y+5	; 0x05
     6f8:	61 e0       	ldi	r22, 0x01	; 1
     6fa:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_6, Status_Pin_High);	// F = 1
     6fe:	8e 81       	ldd	r24, Y+6	; 0x06
     700:	61 e0       	ldi	r22, 0x01	; 1
     702:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_7, Status_Pin_High);	// G = 1
     706:	8f 81       	ldd	r24, Y+7	; 0x07
     708:	61 e0       	ldi	r22, 0x01	; 1
     70a:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				break;
     70e:	e9 c0       	rjmp	.+466    	; 0x8e2 <__stack+0x83>
		case 2:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_Low);	// A = 0
     710:	89 81       	ldd	r24, Y+1	; 0x01
     712:	60 e0       	ldi	r22, 0x00	; 0
     714:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_Low);	// B = 0
     718:	8a 81       	ldd	r24, Y+2	; 0x02
     71a:	60 e0       	ldi	r22, 0x00	; 0
     71c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_High);	// C = 1
     720:	8b 81       	ldd	r24, Y+3	; 0x03
     722:	61 e0       	ldi	r22, 0x01	; 1
     724:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_Low);	// D = 0
     728:	8c 81       	ldd	r24, Y+4	; 0x04
     72a:	60 e0       	ldi	r22, 0x00	; 0
     72c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_5, Status_Pin_Low);	// E = 0
     730:	8d 81       	ldd	r24, Y+5	; 0x05
     732:	60 e0       	ldi	r22, 0x00	; 0
     734:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_6, Status_Pin_High);	// F = 1
     738:	8e 81       	ldd	r24, Y+6	; 0x06
     73a:	61 e0       	ldi	r22, 0x01	; 1
     73c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_7, Status_Pin_Low);	// G = 0
     740:	8f 81       	ldd	r24, Y+7	; 0x07
     742:	60 e0       	ldi	r22, 0x00	; 0
     744:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
			break;
     748:	cc c0       	rjmp	.+408    	; 0x8e2 <__stack+0x83>
		case 3:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_Low);	// A = 0
     74a:	89 81       	ldd	r24, Y+1	; 0x01
     74c:	60 e0       	ldi	r22, 0x00	; 0
     74e:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_Low);	// B = 0
     752:	8a 81       	ldd	r24, Y+2	; 0x02
     754:	60 e0       	ldi	r22, 0x00	; 0
     756:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_Low);	// C = 0
     75a:	8b 81       	ldd	r24, Y+3	; 0x03
     75c:	60 e0       	ldi	r22, 0x00	; 0
     75e:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_Low);	// D = 0
     762:	8c 81       	ldd	r24, Y+4	; 0x04
     764:	60 e0       	ldi	r22, 0x00	; 0
     766:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_5, Status_Pin_High);	// E = 1
     76a:	8d 81       	ldd	r24, Y+5	; 0x05
     76c:	61 e0       	ldi	r22, 0x01	; 1
     76e:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_6, Status_Pin_High);	// F = 1
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	61 e0       	ldi	r22, 0x01	; 1
     776:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_7, Status_Pin_Low);	// G = 0
     77a:	8f 81       	ldd	r24, Y+7	; 0x07
     77c:	60 e0       	ldi	r22, 0x00	; 0
     77e:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>

				break;
     782:	af c0       	rjmp	.+350    	; 0x8e2 <__stack+0x83>
		case 4:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_High);	// A = 1
     784:	89 81       	ldd	r24, Y+1	; 0x01
     786:	61 e0       	ldi	r22, 0x01	; 1
     788:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_Low);	// B = 0
     78c:	8a 81       	ldd	r24, Y+2	; 0x02
     78e:	60 e0       	ldi	r22, 0x00	; 0
     790:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_Low);	// C = 0
     794:	8b 81       	ldd	r24, Y+3	; 0x03
     796:	60 e0       	ldi	r22, 0x00	; 0
     798:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_High);	// D = 1
     79c:	8c 81       	ldd	r24, Y+4	; 0x04
     79e:	61 e0       	ldi	r22, 0x01	; 1
     7a0:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_5, Status_Pin_High);	// E = 1
     7a4:	8d 81       	ldd	r24, Y+5	; 0x05
     7a6:	61 e0       	ldi	r22, 0x01	; 1
     7a8:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_6, Status_Pin_Low);	// F = 0
     7ac:	8e 81       	ldd	r24, Y+6	; 0x06
     7ae:	60 e0       	ldi	r22, 0x00	; 0
     7b0:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_7, Status_Pin_Low);	// G = 0
     7b4:	8f 81       	ldd	r24, Y+7	; 0x07
     7b6:	60 e0       	ldi	r22, 0x00	; 0
     7b8:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				break;
     7bc:	92 c0       	rjmp	.+292    	; 0x8e2 <__stack+0x83>
		case 5:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_Low);	// A = 0
     7be:	89 81       	ldd	r24, Y+1	; 0x01
     7c0:	60 e0       	ldi	r22, 0x00	; 0
     7c2:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_High);	// B = 1
     7c6:	8a 81       	ldd	r24, Y+2	; 0x02
     7c8:	61 e0       	ldi	r22, 0x01	; 1
     7ca:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_Low);	// C = 0
     7ce:	8b 81       	ldd	r24, Y+3	; 0x03
     7d0:	60 e0       	ldi	r22, 0x00	; 0
     7d2:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_Low);	// D = 0
     7d6:	8c 81       	ldd	r24, Y+4	; 0x04
     7d8:	60 e0       	ldi	r22, 0x00	; 0
     7da:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_5, Status_Pin_High);	// E = 1
     7de:	8d 81       	ldd	r24, Y+5	; 0x05
     7e0:	61 e0       	ldi	r22, 0x01	; 1
     7e2:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_6, Status_Pin_Low);	// F = 0
     7e6:	8e 81       	ldd	r24, Y+6	; 0x06
     7e8:	60 e0       	ldi	r22, 0x00	; 0
     7ea:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_7, Status_Pin_Low);	// G = 0
     7ee:	8f 81       	ldd	r24, Y+7	; 0x07
     7f0:	60 e0       	ldi	r22, 0x00	; 0
     7f2:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
			break;
     7f6:	75 c0       	rjmp	.+234    	; 0x8e2 <__stack+0x83>
		case 6:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_Low);	// A = 0
     7f8:	89 81       	ldd	r24, Y+1	; 0x01
     7fa:	60 e0       	ldi	r22, 0x00	; 0
     7fc:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_High);	// B = 1
     800:	8a 81       	ldd	r24, Y+2	; 0x02
     802:	61 e0       	ldi	r22, 0x01	; 1
     804:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_Low);	// C = 0
     808:	8b 81       	ldd	r24, Y+3	; 0x03
     80a:	60 e0       	ldi	r22, 0x00	; 0
     80c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_Low);	// D = 0
     810:	8c 81       	ldd	r24, Y+4	; 0x04
     812:	60 e0       	ldi	r22, 0x00	; 0
     814:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_5, Status_Pin_Low);	// E = 0
     818:	8d 81       	ldd	r24, Y+5	; 0x05
     81a:	60 e0       	ldi	r22, 0x00	; 0
     81c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_6, Status_Pin_Low);	// F = 0
     820:	8e 81       	ldd	r24, Y+6	; 0x06
     822:	60 e0       	ldi	r22, 0x00	; 0
     824:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_7, Status_Pin_Low);	// G = 0
     828:	8f 81       	ldd	r24, Y+7	; 0x07
     82a:	60 e0       	ldi	r22, 0x00	; 0
     82c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				break;
     830:	58 c0       	rjmp	.+176    	; 0x8e2 <__stack+0x83>
		case 7:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_Low);	// A = 0
     832:	89 81       	ldd	r24, Y+1	; 0x01
     834:	60 e0       	ldi	r22, 0x00	; 0
     836:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_Low);	// B = 0
     83a:	8a 81       	ldd	r24, Y+2	; 0x02
     83c:	60 e0       	ldi	r22, 0x00	; 0
     83e:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_Low);	// C = 0
     842:	8b 81       	ldd	r24, Y+3	; 0x03
     844:	60 e0       	ldi	r22, 0x00	; 0
     846:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_High);	// D = 1
     84a:	8c 81       	ldd	r24, Y+4	; 0x04
     84c:	61 e0       	ldi	r22, 0x01	; 1
     84e:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_5, Status_Pin_High);	// E = 1
     852:	8d 81       	ldd	r24, Y+5	; 0x05
     854:	61 e0       	ldi	r22, 0x01	; 1
     856:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_6, Status_Pin_High);	// F = 1
     85a:	8e 81       	ldd	r24, Y+6	; 0x06
     85c:	61 e0       	ldi	r22, 0x01	; 1
     85e:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_7, Status_Pin_High);	// G = 1
     862:	8f 81       	ldd	r24, Y+7	; 0x07
     864:	61 e0       	ldi	r22, 0x01	; 1
     866:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				break;
     86a:	3b c0       	rjmp	.+118    	; 0x8e2 <__stack+0x83>
		case 8:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_Low);	// A = 0
     86c:	89 81       	ldd	r24, Y+1	; 0x01
     86e:	60 e0       	ldi	r22, 0x00	; 0
     870:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_Low);	// B = 0
     874:	8a 81       	ldd	r24, Y+2	; 0x02
     876:	60 e0       	ldi	r22, 0x00	; 0
     878:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_Low);	// C = 0
     87c:	8b 81       	ldd	r24, Y+3	; 0x03
     87e:	60 e0       	ldi	r22, 0x00	; 0
     880:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_Low);	// D = 0
     884:	8c 81       	ldd	r24, Y+4	; 0x04
     886:	60 e0       	ldi	r22, 0x00	; 0
     888:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_5, Status_Pin_Low);	// E = 0
     88c:	8d 81       	ldd	r24, Y+5	; 0x05
     88e:	60 e0       	ldi	r22, 0x00	; 0
     890:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_6, Status_Pin_Low);	// F = 0
     894:	8e 81       	ldd	r24, Y+6	; 0x06
     896:	60 e0       	ldi	r22, 0x00	; 0
     898:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_7, Status_Pin_Low);	// G = 0
     89c:	8f 81       	ldd	r24, Y+7	; 0x07
     89e:	60 e0       	ldi	r22, 0x00	; 0
     8a0:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
			break;
     8a4:	1e c0       	rjmp	.+60     	; 0x8e2 <__stack+0x83>
		case 9:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_Low);	// A = 0
     8a6:	89 81       	ldd	r24, Y+1	; 0x01
     8a8:	60 e0       	ldi	r22, 0x00	; 0
     8aa:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_Low);	// B = 0
     8ae:	8a 81       	ldd	r24, Y+2	; 0x02
     8b0:	60 e0       	ldi	r22, 0x00	; 0
     8b2:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_Low);	// C = 0
     8b6:	8b 81       	ldd	r24, Y+3	; 0x03
     8b8:	60 e0       	ldi	r22, 0x00	; 0
     8ba:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_Low);	// D = 0
     8be:	8c 81       	ldd	r24, Y+4	; 0x04
     8c0:	60 e0       	ldi	r22, 0x00	; 0
     8c2:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_5, Status_Pin_High);	// E = 1
     8c6:	8d 81       	ldd	r24, Y+5	; 0x05
     8c8:	61 e0       	ldi	r22, 0x01	; 1
     8ca:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_6, Status_Pin_Low);	// F = 0
     8ce:	8e 81       	ldd	r24, Y+6	; 0x06
     8d0:	60 e0       	ldi	r22, 0x00	; 0
     8d2:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_7, Status_Pin_Low);	// G = 0
     8d6:	8f 81       	ldd	r24, Y+7	; 0x07
     8d8:	60 e0       	ldi	r22, 0x00	; 0
     8da:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
			break;
     8de:	01 c0       	rjmp	.+2      	; 0x8e2 <__stack+0x83>
		default:
			break;
     8e0:	00 00       	nop
	}
}
     8e2:	00 00       	nop
     8e4:	28 96       	adiw	r28, 0x08	; 8
     8e6:	0f b6       	in	r0, 0x3f	; 63
     8e8:	f8 94       	cli
     8ea:	de bf       	out	0x3e, r29	; 62
     8ec:	0f be       	out	0x3f, r0	; 63
     8ee:	cd bf       	out	0x3d, r28	; 61
     8f0:	df 91       	pop	r29
     8f2:	cf 91       	pop	r28
     8f4:	0f 91       	pop	r16
     8f6:	08 95       	ret

000008f8 <Bcd_MPX_2Enable>:

void Bcd_MPX_2Enable(MPX_2_Enables CopyPinsEnable, u8 CopyCommonType, u8 CopyStatus)
{
     8f8:	cf 93       	push	r28
     8fa:	df 93       	push	r29
     8fc:	00 d0       	rcall	.+0      	; 0x8fe <Bcd_MPX_2Enable+0x6>
     8fe:	00 d0       	rcall	.+0      	; 0x900 <Bcd_MPX_2Enable+0x8>
     900:	cd b7       	in	r28, 0x3d	; 61
     902:	de b7       	in	r29, 0x3e	; 62
     904:	9a 83       	std	Y+2, r25	; 0x02
     906:	89 83       	std	Y+1, r24	; 0x01
     908:	6b 83       	std	Y+3, r22	; 0x03
     90a:	4c 83       	std	Y+4, r20	; 0x04
	if(CopyStatus == Enable){
     90c:	8c 81       	ldd	r24, Y+4	; 0x04
     90e:	81 30       	cpi	r24, 0x01	; 1
     910:	d1 f4       	brne	.+52     	; 0x946 <Bcd_MPX_2Enable+0x4e>
		switch (CopyCommonType) {
     912:	8b 81       	ldd	r24, Y+3	; 0x03
     914:	88 2f       	mov	r24, r24
     916:	90 e0       	ldi	r25, 0x00	; 0
     918:	00 97       	sbiw	r24, 0x00	; 0
     91a:	61 f0       	breq	.+24     	; 0x934 <Bcd_MPX_2Enable+0x3c>
     91c:	01 97       	sbiw	r24, 0x01	; 1
     91e:	09 f0       	breq	.+2      	; 0x922 <Bcd_MPX_2Enable+0x2a>
			case Common_Cathod :
				Dio_setPinVal(CopyPinsEnable.EN_1, Status_Pin_Low);
				Dio_setPinVal(CopyPinsEnable.EN_2, Status_Pin_Low);
				break;
			default:
				break;
     920:	2f c0       	rjmp	.+94     	; 0x980 <Bcd_MPX_2Enable+0x88>
{
	if(CopyStatus == Enable){
		switch (CopyCommonType) {
			case Common_Anode :

				Dio_setPinVal(CopyPinsEnable.EN_1, Status_Pin_High);
     922:	89 81       	ldd	r24, Y+1	; 0x01
     924:	61 e0       	ldi	r22, 0x01	; 1
     926:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_2, Status_Pin_High);
     92a:	8a 81       	ldd	r24, Y+2	; 0x02
     92c:	61 e0       	ldi	r22, 0x01	; 1
     92e:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				break;
     932:	26 c0       	rjmp	.+76     	; 0x980 <Bcd_MPX_2Enable+0x88>
			case Common_Cathod :
				Dio_setPinVal(CopyPinsEnable.EN_1, Status_Pin_Low);
     934:	89 81       	ldd	r24, Y+1	; 0x01
     936:	60 e0       	ldi	r22, 0x00	; 0
     938:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_2, Status_Pin_Low);
     93c:	8a 81       	ldd	r24, Y+2	; 0x02
     93e:	60 e0       	ldi	r22, 0x00	; 0
     940:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				break;
     944:	1d c0       	rjmp	.+58     	; 0x980 <Bcd_MPX_2Enable+0x88>
			default:
				break;
		}
	}
	else if (CopyStatus == Disable){
     946:	8c 81       	ldd	r24, Y+4	; 0x04
     948:	88 23       	and	r24, r24
     94a:	d1 f4       	brne	.+52     	; 0x980 <Bcd_MPX_2Enable+0x88>
		switch (CopyCommonType) {
     94c:	8b 81       	ldd	r24, Y+3	; 0x03
     94e:	88 2f       	mov	r24, r24
     950:	90 e0       	ldi	r25, 0x00	; 0
     952:	00 97       	sbiw	r24, 0x00	; 0
     954:	61 f0       	breq	.+24     	; 0x96e <Bcd_MPX_2Enable+0x76>
     956:	01 97       	sbiw	r24, 0x01	; 1
     958:	09 f0       	breq	.+2      	; 0x95c <Bcd_MPX_2Enable+0x64>
			case Common_Cathod :
				Dio_setPinVal(CopyPinsEnable.EN_1, Status_Pin_High);
				Dio_setPinVal(CopyPinsEnable.EN_2, Status_Pin_High);
				break;
			default:
				break;
     95a:	12 c0       	rjmp	.+36     	; 0x980 <Bcd_MPX_2Enable+0x88>
	}
	else if (CopyStatus == Disable){
		switch (CopyCommonType) {
			case Common_Anode :

				Dio_setPinVal(CopyPinsEnable.EN_1, Status_Pin_Low);
     95c:	89 81       	ldd	r24, Y+1	; 0x01
     95e:	60 e0       	ldi	r22, 0x00	; 0
     960:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_2, Status_Pin_Low);
     964:	8a 81       	ldd	r24, Y+2	; 0x02
     966:	60 e0       	ldi	r22, 0x00	; 0
     968:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				break;
     96c:	09 c0       	rjmp	.+18     	; 0x980 <Bcd_MPX_2Enable+0x88>
			case Common_Cathod :
				Dio_setPinVal(CopyPinsEnable.EN_1, Status_Pin_High);
     96e:	89 81       	ldd	r24, Y+1	; 0x01
     970:	61 e0       	ldi	r22, 0x01	; 1
     972:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_2, Status_Pin_High);
     976:	8a 81       	ldd	r24, Y+2	; 0x02
     978:	61 e0       	ldi	r22, 0x01	; 1
     97a:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				break;
     97e:	00 00       	nop
			default:
				break;
		}
	}
	else{}
}
     980:	00 00       	nop
     982:	0f 90       	pop	r0
     984:	0f 90       	pop	r0
     986:	0f 90       	pop	r0
     988:	0f 90       	pop	r0
     98a:	df 91       	pop	r29
     98c:	cf 91       	pop	r28
     98e:	08 95       	ret

00000990 <Bcd_MPX_4Enable>:
void Bcd_MPX_4Enable(MPX_4_Enables CopyPinsEnable , u8 CopyCommonType, u8 CopyStatus)
{
     990:	cf 93       	push	r28
     992:	df 93       	push	r29
     994:	00 d0       	rcall	.+0      	; 0x996 <Bcd_MPX_4Enable+0x6>
     996:	00 d0       	rcall	.+0      	; 0x998 <Bcd_MPX_4Enable+0x8>
     998:	00 d0       	rcall	.+0      	; 0x99a <Bcd_MPX_4Enable+0xa>
     99a:	cd b7       	in	r28, 0x3d	; 61
     99c:	de b7       	in	r29, 0x3e	; 62
     99e:	69 83       	std	Y+1, r22	; 0x01
     9a0:	7a 83       	std	Y+2, r23	; 0x02
     9a2:	8b 83       	std	Y+3, r24	; 0x03
     9a4:	9c 83       	std	Y+4, r25	; 0x04
     9a6:	4d 83       	std	Y+5, r20	; 0x05
     9a8:	2e 83       	std	Y+6, r18	; 0x06
	if(CopyStatus == Enable){
     9aa:	8e 81       	ldd	r24, Y+6	; 0x06
     9ac:	81 30       	cpi	r24, 0x01	; 1
     9ae:	51 f5       	brne	.+84     	; 0xa04 <Bcd_MPX_4Enable+0x74>
		switch (CopyCommonType) {
     9b0:	8d 81       	ldd	r24, Y+5	; 0x05
     9b2:	88 2f       	mov	r24, r24
     9b4:	90 e0       	ldi	r25, 0x00	; 0
     9b6:	00 97       	sbiw	r24, 0x00	; 0
     9b8:	a1 f0       	breq	.+40     	; 0x9e2 <Bcd_MPX_4Enable+0x52>
     9ba:	01 97       	sbiw	r24, 0x01	; 1
     9bc:	09 f0       	breq	.+2      	; 0x9c0 <Bcd_MPX_4Enable+0x30>
				Dio_setPinVal(CopyPinsEnable.EN_2, Status_Pin_Low);
				Dio_setPinVal(CopyPinsEnable.EN_3, Status_Pin_Low);
				Dio_setPinVal(CopyPinsEnable.EN_4, Status_Pin_Low);
				break;
			default:
				break;
     9be:	4f c0       	rjmp	.+158    	; 0xa5e <Bcd_MPX_4Enable+0xce>
{
	if(CopyStatus == Enable){
		switch (CopyCommonType) {
			case Common_Anode :

				Dio_setPinVal(CopyPinsEnable.EN_1, Status_Pin_High);
     9c0:	89 81       	ldd	r24, Y+1	; 0x01
     9c2:	61 e0       	ldi	r22, 0x01	; 1
     9c4:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_2, Status_Pin_High);
     9c8:	8a 81       	ldd	r24, Y+2	; 0x02
     9ca:	61 e0       	ldi	r22, 0x01	; 1
     9cc:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_3, Status_Pin_High);
     9d0:	8b 81       	ldd	r24, Y+3	; 0x03
     9d2:	61 e0       	ldi	r22, 0x01	; 1
     9d4:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_4, Status_Pin_High);
     9d8:	8c 81       	ldd	r24, Y+4	; 0x04
     9da:	61 e0       	ldi	r22, 0x01	; 1
     9dc:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				break;
     9e0:	3e c0       	rjmp	.+124    	; 0xa5e <Bcd_MPX_4Enable+0xce>
			case Common_Cathod :
				Dio_setPinVal(CopyPinsEnable.EN_1, Status_Pin_Low);
     9e2:	89 81       	ldd	r24, Y+1	; 0x01
     9e4:	60 e0       	ldi	r22, 0x00	; 0
     9e6:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_2, Status_Pin_Low);
     9ea:	8a 81       	ldd	r24, Y+2	; 0x02
     9ec:	60 e0       	ldi	r22, 0x00	; 0
     9ee:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_3, Status_Pin_Low);
     9f2:	8b 81       	ldd	r24, Y+3	; 0x03
     9f4:	60 e0       	ldi	r22, 0x00	; 0
     9f6:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_4, Status_Pin_Low);
     9fa:	8c 81       	ldd	r24, Y+4	; 0x04
     9fc:	60 e0       	ldi	r22, 0x00	; 0
     9fe:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				break;
     a02:	2d c0       	rjmp	.+90     	; 0xa5e <Bcd_MPX_4Enable+0xce>
			default:
				break;
		}
	}
	else if (CopyStatus == Disable)
     a04:	8e 81       	ldd	r24, Y+6	; 0x06
     a06:	88 23       	and	r24, r24
     a08:	51 f5       	brne	.+84     	; 0xa5e <Bcd_MPX_4Enable+0xce>
	{
		switch (CopyCommonType) {
     a0a:	8d 81       	ldd	r24, Y+5	; 0x05
     a0c:	88 2f       	mov	r24, r24
     a0e:	90 e0       	ldi	r25, 0x00	; 0
     a10:	00 97       	sbiw	r24, 0x00	; 0
     a12:	a1 f0       	breq	.+40     	; 0xa3c <Bcd_MPX_4Enable+0xac>
     a14:	01 97       	sbiw	r24, 0x01	; 1
     a16:	09 f0       	breq	.+2      	; 0xa1a <Bcd_MPX_4Enable+0x8a>
				Dio_setPinVal(CopyPinsEnable.EN_2, Status_Pin_High);
				Dio_setPinVal(CopyPinsEnable.EN_3, Status_Pin_High);
				Dio_setPinVal(CopyPinsEnable.EN_4, Status_Pin_High);
				break;
			default:
				break;
     a18:	22 c0       	rjmp	.+68     	; 0xa5e <Bcd_MPX_4Enable+0xce>
	else if (CopyStatus == Disable)
	{
		switch (CopyCommonType) {
			case Common_Anode :

				Dio_setPinVal(CopyPinsEnable.EN_1, Status_Pin_Low);
     a1a:	89 81       	ldd	r24, Y+1	; 0x01
     a1c:	60 e0       	ldi	r22, 0x00	; 0
     a1e:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_2, Status_Pin_Low);
     a22:	8a 81       	ldd	r24, Y+2	; 0x02
     a24:	60 e0       	ldi	r22, 0x00	; 0
     a26:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_3, Status_Pin_Low);
     a2a:	8b 81       	ldd	r24, Y+3	; 0x03
     a2c:	60 e0       	ldi	r22, 0x00	; 0
     a2e:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_4, Status_Pin_Low);
     a32:	8c 81       	ldd	r24, Y+4	; 0x04
     a34:	60 e0       	ldi	r22, 0x00	; 0
     a36:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				break;
     a3a:	11 c0       	rjmp	.+34     	; 0xa5e <Bcd_MPX_4Enable+0xce>
			case Common_Cathod :
				Dio_setPinVal(CopyPinsEnable.EN_1, Status_Pin_High);
     a3c:	89 81       	ldd	r24, Y+1	; 0x01
     a3e:	61 e0       	ldi	r22, 0x01	; 1
     a40:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_2, Status_Pin_High);
     a44:	8a 81       	ldd	r24, Y+2	; 0x02
     a46:	61 e0       	ldi	r22, 0x01	; 1
     a48:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_3, Status_Pin_High);
     a4c:	8b 81       	ldd	r24, Y+3	; 0x03
     a4e:	61 e0       	ldi	r22, 0x01	; 1
     a50:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_4, Status_Pin_High);
     a54:	8c 81       	ldd	r24, Y+4	; 0x04
     a56:	61 e0       	ldi	r22, 0x01	; 1
     a58:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				break;
     a5c:	00 00       	nop
			default:
				break;
		}
	}
	else{}
}
     a5e:	00 00       	nop
     a60:	26 96       	adiw	r28, 0x06	; 6
     a62:	0f b6       	in	r0, 0x3f	; 63
     a64:	f8 94       	cli
     a66:	de bf       	out	0x3e, r29	; 62
     a68:	0f be       	out	0x3f, r0	; 63
     a6a:	cd bf       	out	0x3d, r28	; 61
     a6c:	df 91       	pop	r29
     a6e:	cf 91       	pop	r28
     a70:	08 95       	ret

00000a72 <Bcd_MPX_6Enable>:
void Bcd_MPX_6Enable(MPX_6_Enables CopyPinsEnable , u8 CopyCommonType, u8 CopyStatus)
{
     a72:	0f 93       	push	r16
     a74:	cf 93       	push	r28
     a76:	df 93       	push	r29
     a78:	cd b7       	in	r28, 0x3d	; 61
     a7a:	de b7       	in	r29, 0x3e	; 62
     a7c:	28 97       	sbiw	r28, 0x08	; 8
     a7e:	0f b6       	in	r0, 0x3f	; 63
     a80:	f8 94       	cli
     a82:	de bf       	out	0x3e, r29	; 62
     a84:	0f be       	out	0x3f, r0	; 63
     a86:	cd bf       	out	0x3d, r28	; 61
     a88:	49 83       	std	Y+1, r20	; 0x01
     a8a:	5a 83       	std	Y+2, r21	; 0x02
     a8c:	6b 83       	std	Y+3, r22	; 0x03
     a8e:	7c 83       	std	Y+4, r23	; 0x04
     a90:	8d 83       	std	Y+5, r24	; 0x05
     a92:	9e 83       	std	Y+6, r25	; 0x06
     a94:	2f 83       	std	Y+7, r18	; 0x07
     a96:	08 87       	std	Y+8, r16	; 0x08
	if(CopyStatus == Enable){
     a98:	88 85       	ldd	r24, Y+8	; 0x08
     a9a:	81 30       	cpi	r24, 0x01	; 1
     a9c:	d1 f5       	brne	.+116    	; 0xb12 <Bcd_MPX_6Enable+0xa0>
		switch (CopyCommonType) {
     a9e:	8f 81       	ldd	r24, Y+7	; 0x07
     aa0:	88 2f       	mov	r24, r24
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	00 97       	sbiw	r24, 0x00	; 0
     aa6:	e1 f0       	breq	.+56     	; 0xae0 <Bcd_MPX_6Enable+0x6e>
     aa8:	01 97       	sbiw	r24, 0x01	; 1
     aaa:	09 f0       	breq	.+2      	; 0xaae <Bcd_MPX_6Enable+0x3c>
				Dio_setPinVal(CopyPinsEnable.EN_4, Status_Pin_Low);
				Dio_setPinVal(CopyPinsEnable.EN_5, Status_Pin_Low);
				Dio_setPinVal(CopyPinsEnable.EN_6, Status_Pin_Low);
				break;
			default:
				break;
     aac:	6f c0       	rjmp	.+222    	; 0xb8c <Bcd_MPX_6Enable+0x11a>
{
	if(CopyStatus == Enable){
		switch (CopyCommonType) {
			case Common_Anode :

				Dio_setPinVal(CopyPinsEnable.EN_1, Status_Pin_High);
     aae:	89 81       	ldd	r24, Y+1	; 0x01
     ab0:	61 e0       	ldi	r22, 0x01	; 1
     ab2:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_2, Status_Pin_High);
     ab6:	8a 81       	ldd	r24, Y+2	; 0x02
     ab8:	61 e0       	ldi	r22, 0x01	; 1
     aba:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_3, Status_Pin_High);
     abe:	8b 81       	ldd	r24, Y+3	; 0x03
     ac0:	61 e0       	ldi	r22, 0x01	; 1
     ac2:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_4, Status_Pin_High);
     ac6:	8c 81       	ldd	r24, Y+4	; 0x04
     ac8:	61 e0       	ldi	r22, 0x01	; 1
     aca:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_5, Status_Pin_High);
     ace:	8d 81       	ldd	r24, Y+5	; 0x05
     ad0:	61 e0       	ldi	r22, 0x01	; 1
     ad2:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_6, Status_Pin_High);
     ad6:	8e 81       	ldd	r24, Y+6	; 0x06
     ad8:	61 e0       	ldi	r22, 0x01	; 1
     ada:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				break;
     ade:	56 c0       	rjmp	.+172    	; 0xb8c <Bcd_MPX_6Enable+0x11a>
			case Common_Cathod :
				Dio_setPinVal(CopyPinsEnable.EN_1, Status_Pin_Low);
     ae0:	89 81       	ldd	r24, Y+1	; 0x01
     ae2:	60 e0       	ldi	r22, 0x00	; 0
     ae4:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_2, Status_Pin_Low);
     ae8:	8a 81       	ldd	r24, Y+2	; 0x02
     aea:	60 e0       	ldi	r22, 0x00	; 0
     aec:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_3, Status_Pin_Low);
     af0:	8b 81       	ldd	r24, Y+3	; 0x03
     af2:	60 e0       	ldi	r22, 0x00	; 0
     af4:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_4, Status_Pin_Low);
     af8:	8c 81       	ldd	r24, Y+4	; 0x04
     afa:	60 e0       	ldi	r22, 0x00	; 0
     afc:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_5, Status_Pin_Low);
     b00:	8d 81       	ldd	r24, Y+5	; 0x05
     b02:	60 e0       	ldi	r22, 0x00	; 0
     b04:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_6, Status_Pin_Low);
     b08:	8e 81       	ldd	r24, Y+6	; 0x06
     b0a:	60 e0       	ldi	r22, 0x00	; 0
     b0c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				break;
     b10:	3d c0       	rjmp	.+122    	; 0xb8c <Bcd_MPX_6Enable+0x11a>
			default:
				break;
		}
	}
	else if (CopyStatus == Disable)
     b12:	88 85       	ldd	r24, Y+8	; 0x08
     b14:	88 23       	and	r24, r24
     b16:	d1 f5       	brne	.+116    	; 0xb8c <Bcd_MPX_6Enable+0x11a>
	{
		switch (CopyCommonType) {
     b18:	8f 81       	ldd	r24, Y+7	; 0x07
     b1a:	88 2f       	mov	r24, r24
     b1c:	90 e0       	ldi	r25, 0x00	; 0
     b1e:	00 97       	sbiw	r24, 0x00	; 0
     b20:	e1 f0       	breq	.+56     	; 0xb5a <Bcd_MPX_6Enable+0xe8>
     b22:	01 97       	sbiw	r24, 0x01	; 1
     b24:	09 f0       	breq	.+2      	; 0xb28 <Bcd_MPX_6Enable+0xb6>
				Dio_setPinVal(CopyPinsEnable.EN_4, Status_Pin_High);
				Dio_setPinVal(CopyPinsEnable.EN_5, Status_Pin_High);
				Dio_setPinVal(CopyPinsEnable.EN_6, Status_Pin_High);
				break;
			default:
				break;
     b26:	32 c0       	rjmp	.+100    	; 0xb8c <Bcd_MPX_6Enable+0x11a>
	else if (CopyStatus == Disable)
	{
		switch (CopyCommonType) {
			case Common_Anode :

				Dio_setPinVal(CopyPinsEnable.EN_1, Status_Pin_Low);
     b28:	89 81       	ldd	r24, Y+1	; 0x01
     b2a:	60 e0       	ldi	r22, 0x00	; 0
     b2c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_2, Status_Pin_Low);
     b30:	8a 81       	ldd	r24, Y+2	; 0x02
     b32:	60 e0       	ldi	r22, 0x00	; 0
     b34:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_3, Status_Pin_Low);
     b38:	8b 81       	ldd	r24, Y+3	; 0x03
     b3a:	60 e0       	ldi	r22, 0x00	; 0
     b3c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_4, Status_Pin_Low);
     b40:	8c 81       	ldd	r24, Y+4	; 0x04
     b42:	60 e0       	ldi	r22, 0x00	; 0
     b44:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_5, Status_Pin_Low);
     b48:	8d 81       	ldd	r24, Y+5	; 0x05
     b4a:	60 e0       	ldi	r22, 0x00	; 0
     b4c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_6, Status_Pin_Low);
     b50:	8e 81       	ldd	r24, Y+6	; 0x06
     b52:	60 e0       	ldi	r22, 0x00	; 0
     b54:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				break;
     b58:	19 c0       	rjmp	.+50     	; 0xb8c <Bcd_MPX_6Enable+0x11a>
			case Common_Cathod :
				Dio_setPinVal(CopyPinsEnable.EN_1, Status_Pin_High);
     b5a:	89 81       	ldd	r24, Y+1	; 0x01
     b5c:	61 e0       	ldi	r22, 0x01	; 1
     b5e:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_2, Status_Pin_High);
     b62:	8a 81       	ldd	r24, Y+2	; 0x02
     b64:	61 e0       	ldi	r22, 0x01	; 1
     b66:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_3, Status_Pin_High);
     b6a:	8b 81       	ldd	r24, Y+3	; 0x03
     b6c:	61 e0       	ldi	r22, 0x01	; 1
     b6e:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_4, Status_Pin_High);
     b72:	8c 81       	ldd	r24, Y+4	; 0x04
     b74:	61 e0       	ldi	r22, 0x01	; 1
     b76:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_5, Status_Pin_High);
     b7a:	8d 81       	ldd	r24, Y+5	; 0x05
     b7c:	61 e0       	ldi	r22, 0x01	; 1
     b7e:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_6, Status_Pin_High);
     b82:	8e 81       	ldd	r24, Y+6	; 0x06
     b84:	61 e0       	ldi	r22, 0x01	; 1
     b86:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				break;
     b8a:	00 00       	nop
			default:
				break;
		}
	}
	else{}
}
     b8c:	00 00       	nop
     b8e:	28 96       	adiw	r28, 0x08	; 8
     b90:	0f b6       	in	r0, 0x3f	; 63
     b92:	f8 94       	cli
     b94:	de bf       	out	0x3e, r29	; 62
     b96:	0f be       	out	0x3f, r0	; 63
     b98:	cd bf       	out	0x3d, r28	; 61
     b9a:	df 91       	pop	r29
     b9c:	cf 91       	pop	r28
     b9e:	0f 91       	pop	r16
     ba0:	08 95       	ret

00000ba2 <Bcd_MPX_8Enable>:
void Bcd_MPX_8Enable(MPX_8_Enables CopyPinsEnable , u8 CopyCommonType, u8 CopyStatus)
{
     ba2:	ef 92       	push	r14
     ba4:	0f 93       	push	r16
     ba6:	cf 93       	push	r28
     ba8:	df 93       	push	r29
     baa:	cd b7       	in	r28, 0x3d	; 61
     bac:	de b7       	in	r29, 0x3e	; 62
     bae:	2a 97       	sbiw	r28, 0x0a	; 10
     bb0:	0f b6       	in	r0, 0x3f	; 63
     bb2:	f8 94       	cli
     bb4:	de bf       	out	0x3e, r29	; 62
     bb6:	0f be       	out	0x3f, r0	; 63
     bb8:	cd bf       	out	0x3d, r28	; 61
     bba:	29 83       	std	Y+1, r18	; 0x01
     bbc:	3a 83       	std	Y+2, r19	; 0x02
     bbe:	4b 83       	std	Y+3, r20	; 0x03
     bc0:	5c 83       	std	Y+4, r21	; 0x04
     bc2:	6d 83       	std	Y+5, r22	; 0x05
     bc4:	7e 83       	std	Y+6, r23	; 0x06
     bc6:	8f 83       	std	Y+7, r24	; 0x07
     bc8:	98 87       	std	Y+8, r25	; 0x08
     bca:	09 87       	std	Y+9, r16	; 0x09
     bcc:	ea 86       	std	Y+10, r14	; 0x0a
	if(CopyStatus == Enable){
     bce:	8a 85       	ldd	r24, Y+10	; 0x0a
     bd0:	81 30       	cpi	r24, 0x01	; 1
     bd2:	09 f0       	breq	.+2      	; 0xbd6 <Bcd_MPX_8Enable+0x34>
     bd4:	4a c0       	rjmp	.+148    	; 0xc6a <Bcd_MPX_8Enable+0xc8>
		switch (CopyCommonType) {
     bd6:	89 85       	ldd	r24, Y+9	; 0x09
     bd8:	88 2f       	mov	r24, r24
     bda:	90 e0       	ldi	r25, 0x00	; 0
     bdc:	00 97       	sbiw	r24, 0x00	; 0
     bde:	21 f1       	breq	.+72     	; 0xc28 <Bcd_MPX_8Enable+0x86>
     be0:	01 97       	sbiw	r24, 0x01	; 1
     be2:	09 f0       	breq	.+2      	; 0xbe6 <Bcd_MPX_8Enable+0x44>
				Dio_setPinVal(CopyPinsEnable.EN_6, Status_Pin_Low);
				Dio_setPinVal(CopyPinsEnable.EN_7, Status_Pin_Low);
				Dio_setPinVal(CopyPinsEnable.EN_8, Status_Pin_Low);
				break;
			default:
				break;
     be4:	90 c0       	rjmp	.+288    	; 0xd06 <Bcd_MPX_8Enable+0x164>
{
	if(CopyStatus == Enable){
		switch (CopyCommonType) {
			case Common_Anode :

				Dio_setPinVal(CopyPinsEnable.EN_1, Status_Pin_High);
     be6:	89 81       	ldd	r24, Y+1	; 0x01
     be8:	61 e0       	ldi	r22, 0x01	; 1
     bea:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_2, Status_Pin_High);
     bee:	8a 81       	ldd	r24, Y+2	; 0x02
     bf0:	61 e0       	ldi	r22, 0x01	; 1
     bf2:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_3, Status_Pin_High);
     bf6:	8b 81       	ldd	r24, Y+3	; 0x03
     bf8:	61 e0       	ldi	r22, 0x01	; 1
     bfa:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_4, Status_Pin_High);
     bfe:	8c 81       	ldd	r24, Y+4	; 0x04
     c00:	61 e0       	ldi	r22, 0x01	; 1
     c02:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_5, Status_Pin_High);
     c06:	8d 81       	ldd	r24, Y+5	; 0x05
     c08:	61 e0       	ldi	r22, 0x01	; 1
     c0a:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_6, Status_Pin_High);
     c0e:	8e 81       	ldd	r24, Y+6	; 0x06
     c10:	61 e0       	ldi	r22, 0x01	; 1
     c12:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_7, Status_Pin_High);
     c16:	8f 81       	ldd	r24, Y+7	; 0x07
     c18:	61 e0       	ldi	r22, 0x01	; 1
     c1a:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_8, Status_Pin_High);
     c1e:	88 85       	ldd	r24, Y+8	; 0x08
     c20:	61 e0       	ldi	r22, 0x01	; 1
     c22:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				break;
     c26:	6f c0       	rjmp	.+222    	; 0xd06 <Bcd_MPX_8Enable+0x164>
			case Common_Cathod :
				Dio_setPinVal(CopyPinsEnable.EN_1, Status_Pin_Low);
     c28:	89 81       	ldd	r24, Y+1	; 0x01
     c2a:	60 e0       	ldi	r22, 0x00	; 0
     c2c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_2, Status_Pin_Low);
     c30:	8a 81       	ldd	r24, Y+2	; 0x02
     c32:	60 e0       	ldi	r22, 0x00	; 0
     c34:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_3, Status_Pin_Low);
     c38:	8b 81       	ldd	r24, Y+3	; 0x03
     c3a:	60 e0       	ldi	r22, 0x00	; 0
     c3c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_4, Status_Pin_Low);
     c40:	8c 81       	ldd	r24, Y+4	; 0x04
     c42:	60 e0       	ldi	r22, 0x00	; 0
     c44:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_5, Status_Pin_Low);
     c48:	8d 81       	ldd	r24, Y+5	; 0x05
     c4a:	60 e0       	ldi	r22, 0x00	; 0
     c4c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_6, Status_Pin_Low);
     c50:	8e 81       	ldd	r24, Y+6	; 0x06
     c52:	60 e0       	ldi	r22, 0x00	; 0
     c54:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_7, Status_Pin_Low);
     c58:	8f 81       	ldd	r24, Y+7	; 0x07
     c5a:	60 e0       	ldi	r22, 0x00	; 0
     c5c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_8, Status_Pin_Low);
     c60:	88 85       	ldd	r24, Y+8	; 0x08
     c62:	60 e0       	ldi	r22, 0x00	; 0
     c64:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				break;
     c68:	4e c0       	rjmp	.+156    	; 0xd06 <Bcd_MPX_8Enable+0x164>
			default:
				break;
		}
	}
	else if (CopyStatus == Disable)
     c6a:	8a 85       	ldd	r24, Y+10	; 0x0a
     c6c:	88 23       	and	r24, r24
     c6e:	09 f0       	breq	.+2      	; 0xc72 <Bcd_MPX_8Enable+0xd0>
     c70:	4a c0       	rjmp	.+148    	; 0xd06 <Bcd_MPX_8Enable+0x164>
	{
		switch (CopyCommonType) {
     c72:	89 85       	ldd	r24, Y+9	; 0x09
     c74:	88 2f       	mov	r24, r24
     c76:	90 e0       	ldi	r25, 0x00	; 0
     c78:	00 97       	sbiw	r24, 0x00	; 0
     c7a:	21 f1       	breq	.+72     	; 0xcc4 <Bcd_MPX_8Enable+0x122>
     c7c:	01 97       	sbiw	r24, 0x01	; 1
     c7e:	09 f0       	breq	.+2      	; 0xc82 <Bcd_MPX_8Enable+0xe0>
				Dio_setPinVal(CopyPinsEnable.EN_6, Status_Pin_High);
				Dio_setPinVal(CopyPinsEnable.EN_7, Status_Pin_High);
				Dio_setPinVal(CopyPinsEnable.EN_8, Status_Pin_High);
				break;
			default:
				break;
     c80:	42 c0       	rjmp	.+132    	; 0xd06 <Bcd_MPX_8Enable+0x164>
	else if (CopyStatus == Disable)
	{
		switch (CopyCommonType) {
			case Common_Anode :

				Dio_setPinVal(CopyPinsEnable.EN_1, Status_Pin_Low);
     c82:	89 81       	ldd	r24, Y+1	; 0x01
     c84:	60 e0       	ldi	r22, 0x00	; 0
     c86:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_2, Status_Pin_Low);
     c8a:	8a 81       	ldd	r24, Y+2	; 0x02
     c8c:	60 e0       	ldi	r22, 0x00	; 0
     c8e:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_3, Status_Pin_Low);
     c92:	8b 81       	ldd	r24, Y+3	; 0x03
     c94:	60 e0       	ldi	r22, 0x00	; 0
     c96:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_4, Status_Pin_Low);
     c9a:	8c 81       	ldd	r24, Y+4	; 0x04
     c9c:	60 e0       	ldi	r22, 0x00	; 0
     c9e:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_5, Status_Pin_Low);
     ca2:	8d 81       	ldd	r24, Y+5	; 0x05
     ca4:	60 e0       	ldi	r22, 0x00	; 0
     ca6:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_6, Status_Pin_Low);
     caa:	8e 81       	ldd	r24, Y+6	; 0x06
     cac:	60 e0       	ldi	r22, 0x00	; 0
     cae:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_7, Status_Pin_Low);
     cb2:	8f 81       	ldd	r24, Y+7	; 0x07
     cb4:	60 e0       	ldi	r22, 0x00	; 0
     cb6:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_8, Status_Pin_Low);
     cba:	88 85       	ldd	r24, Y+8	; 0x08
     cbc:	60 e0       	ldi	r22, 0x00	; 0
     cbe:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				break;
     cc2:	21 c0       	rjmp	.+66     	; 0xd06 <Bcd_MPX_8Enable+0x164>
			case Common_Cathod :
				Dio_setPinVal(CopyPinsEnable.EN_1, Status_Pin_High);
     cc4:	89 81       	ldd	r24, Y+1	; 0x01
     cc6:	61 e0       	ldi	r22, 0x01	; 1
     cc8:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_2, Status_Pin_High);
     ccc:	8a 81       	ldd	r24, Y+2	; 0x02
     cce:	61 e0       	ldi	r22, 0x01	; 1
     cd0:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_3, Status_Pin_High);
     cd4:	8b 81       	ldd	r24, Y+3	; 0x03
     cd6:	61 e0       	ldi	r22, 0x01	; 1
     cd8:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_4, Status_Pin_High);
     cdc:	8c 81       	ldd	r24, Y+4	; 0x04
     cde:	61 e0       	ldi	r22, 0x01	; 1
     ce0:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_5, Status_Pin_High);
     ce4:	8d 81       	ldd	r24, Y+5	; 0x05
     ce6:	61 e0       	ldi	r22, 0x01	; 1
     ce8:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_6, Status_Pin_High);
     cec:	8e 81       	ldd	r24, Y+6	; 0x06
     cee:	61 e0       	ldi	r22, 0x01	; 1
     cf0:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_7, Status_Pin_High);
     cf4:	8f 81       	ldd	r24, Y+7	; 0x07
     cf6:	61 e0       	ldi	r22, 0x01	; 1
     cf8:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(CopyPinsEnable.EN_8, Status_Pin_High);
     cfc:	88 85       	ldd	r24, Y+8	; 0x08
     cfe:	61 e0       	ldi	r22, 0x01	; 1
     d00:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				break;
     d04:	00 00       	nop
			default:
				break;
		}
	}
	else{}
}
     d06:	00 00       	nop
     d08:	2a 96       	adiw	r28, 0x0a	; 10
     d0a:	0f b6       	in	r0, 0x3f	; 63
     d0c:	f8 94       	cli
     d0e:	de bf       	out	0x3e, r29	; 62
     d10:	0f be       	out	0x3f, r0	; 63
     d12:	cd bf       	out	0x3d, r28	; 61
     d14:	df 91       	pop	r29
     d16:	cf 91       	pop	r28
     d18:	0f 91       	pop	r16
     d1a:	ef 90       	pop	r14
     d1c:	08 95       	ret

00000d1e <Bcd_7segWriteNumCathode>:

void Bcd_7segWriteNumCathode(Seg Copy7segNum , u8 CopyNumber)
{
     d1e:	0f 93       	push	r16
     d20:	cf 93       	push	r28
     d22:	df 93       	push	r29
     d24:	cd b7       	in	r28, 0x3d	; 61
     d26:	de b7       	in	r29, 0x3e	; 62
     d28:	28 97       	sbiw	r28, 0x08	; 8
     d2a:	0f b6       	in	r0, 0x3f	; 63
     d2c:	f8 94       	cli
     d2e:	de bf       	out	0x3e, r29	; 62
     d30:	0f be       	out	0x3f, r0	; 63
     d32:	cd bf       	out	0x3d, r28	; 61
     d34:	29 83       	std	Y+1, r18	; 0x01
     d36:	3a 83       	std	Y+2, r19	; 0x02
     d38:	4b 83       	std	Y+3, r20	; 0x03
     d3a:	5c 83       	std	Y+4, r21	; 0x04
     d3c:	6d 83       	std	Y+5, r22	; 0x05
     d3e:	7e 83       	std	Y+6, r23	; 0x06
     d40:	8f 83       	std	Y+7, r24	; 0x07
     d42:	08 87       	std	Y+8, r16	; 0x08
	switch (CopyNumber) {
     d44:	88 85       	ldd	r24, Y+8	; 0x08
     d46:	88 2f       	mov	r24, r24
     d48:	90 e0       	ldi	r25, 0x00	; 0
     d4a:	09 2e       	mov	r0, r25
     d4c:	00 0c       	add	r0, r0
     d4e:	aa 0b       	sbc	r26, r26
     d50:	bb 0b       	sbc	r27, r27
     d52:	40 e0       	ldi	r20, 0x00	; 0
     d54:	50 e0       	ldi	r21, 0x00	; 0
     d56:	29 e0       	ldi	r18, 0x09	; 9
     d58:	30 e0       	ldi	r19, 0x00	; 0
     d5a:	84 1b       	sub	r24, r20
     d5c:	95 0b       	sbc	r25, r21
     d5e:	28 17       	cp	r18, r24
     d60:	39 07       	cpc	r19, r25
     d62:	08 f4       	brcc	.+2      	; 0xd66 <Bcd_7segWriteNumCathode+0x48>
     d64:	27 c1       	rjmp	.+590    	; 0xfb4 <Bcd_7segWriteNumCathode+0x296>
     d66:	82 5c       	subi	r24, 0xC2	; 194
     d68:	9f 4f       	sbci	r25, 0xFF	; 255
     d6a:	fc 01       	movw	r30, r24
     d6c:	0c 94 f3 08 	jmp	0x11e6	; 0x11e6 <__tablejump2__>
		case 0:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_High);	// A = 1
     d70:	89 81       	ldd	r24, Y+1	; 0x01
     d72:	61 e0       	ldi	r22, 0x01	; 1
     d74:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_High);	// B = 1
     d78:	8a 81       	ldd	r24, Y+2	; 0x02
     d7a:	61 e0       	ldi	r22, 0x01	; 1
     d7c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_High);	// C = 1
     d80:	8b 81       	ldd	r24, Y+3	; 0x03
     d82:	61 e0       	ldi	r22, 0x01	; 1
     d84:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_High);	// D = 1
     d88:	8c 81       	ldd	r24, Y+4	; 0x04
     d8a:	61 e0       	ldi	r22, 0x01	; 1
     d8c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_5, Status_Pin_High);	// E = 1
     d90:	8d 81       	ldd	r24, Y+5	; 0x05
     d92:	61 e0       	ldi	r22, 0x01	; 1
     d94:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_6, Status_Pin_High);	// F = 1
     d98:	8e 81       	ldd	r24, Y+6	; 0x06
     d9a:	61 e0       	ldi	r22, 0x01	; 1
     d9c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_7, Status_Pin_Low);	// G = 0
     da0:	8f 81       	ldd	r24, Y+7	; 0x07
     da2:	60 e0       	ldi	r22, 0x00	; 0
     da4:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
			break;
     da8:	06 c1       	rjmp	.+524    	; 0xfb6 <Bcd_7segWriteNumCathode+0x298>
		case 1:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_Low);	// A = 0
     daa:	89 81       	ldd	r24, Y+1	; 0x01
     dac:	60 e0       	ldi	r22, 0x00	; 0
     dae:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_High);	// B = 1
     db2:	8a 81       	ldd	r24, Y+2	; 0x02
     db4:	61 e0       	ldi	r22, 0x01	; 1
     db6:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_High);	// C = 1
     dba:	8b 81       	ldd	r24, Y+3	; 0x03
     dbc:	61 e0       	ldi	r22, 0x01	; 1
     dbe:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_Low);	// D = 0
     dc2:	8c 81       	ldd	r24, Y+4	; 0x04
     dc4:	60 e0       	ldi	r22, 0x00	; 0
     dc6:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_5, Status_Pin_Low);	// E = 0
     dca:	8d 81       	ldd	r24, Y+5	; 0x05
     dcc:	60 e0       	ldi	r22, 0x00	; 0
     dce:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_6, Status_Pin_Low);	// F = 0
     dd2:	8e 81       	ldd	r24, Y+6	; 0x06
     dd4:	60 e0       	ldi	r22, 0x00	; 0
     dd6:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_7, Status_Pin_Low);	// G = 0
     dda:	8f 81       	ldd	r24, Y+7	; 0x07
     ddc:	60 e0       	ldi	r22, 0x00	; 0
     dde:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				break;
     de2:	e9 c0       	rjmp	.+466    	; 0xfb6 <Bcd_7segWriteNumCathode+0x298>
		case 2:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_High);	// A = 1
     de4:	89 81       	ldd	r24, Y+1	; 0x01
     de6:	61 e0       	ldi	r22, 0x01	; 1
     de8:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_High);	// B = 1
     dec:	8a 81       	ldd	r24, Y+2	; 0x02
     dee:	61 e0       	ldi	r22, 0x01	; 1
     df0:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_Low);	// C = 0
     df4:	8b 81       	ldd	r24, Y+3	; 0x03
     df6:	60 e0       	ldi	r22, 0x00	; 0
     df8:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_High);	// D = 1
     dfc:	8c 81       	ldd	r24, Y+4	; 0x04
     dfe:	61 e0       	ldi	r22, 0x01	; 1
     e00:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_5, Status_Pin_High);	// E = 1
     e04:	8d 81       	ldd	r24, Y+5	; 0x05
     e06:	61 e0       	ldi	r22, 0x01	; 1
     e08:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_6, Status_Pin_Low);	// F = 0
     e0c:	8e 81       	ldd	r24, Y+6	; 0x06
     e0e:	60 e0       	ldi	r22, 0x00	; 0
     e10:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_7, Status_Pin_High);	// G = 1
     e14:	8f 81       	ldd	r24, Y+7	; 0x07
     e16:	61 e0       	ldi	r22, 0x01	; 1
     e18:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
			break;
     e1c:	cc c0       	rjmp	.+408    	; 0xfb6 <Bcd_7segWriteNumCathode+0x298>
		case 3:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_High);	// A = 1
     e1e:	89 81       	ldd	r24, Y+1	; 0x01
     e20:	61 e0       	ldi	r22, 0x01	; 1
     e22:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_High);	// B = 1
     e26:	8a 81       	ldd	r24, Y+2	; 0x02
     e28:	61 e0       	ldi	r22, 0x01	; 1
     e2a:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_High);	// C = 1
     e2e:	8b 81       	ldd	r24, Y+3	; 0x03
     e30:	61 e0       	ldi	r22, 0x01	; 1
     e32:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_High);	// D = 1
     e36:	8c 81       	ldd	r24, Y+4	; 0x04
     e38:	61 e0       	ldi	r22, 0x01	; 1
     e3a:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_5, Status_Pin_Low);	// E = 0
     e3e:	8d 81       	ldd	r24, Y+5	; 0x05
     e40:	60 e0       	ldi	r22, 0x00	; 0
     e42:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_6, Status_Pin_Low);	// F = 0
     e46:	8e 81       	ldd	r24, Y+6	; 0x06
     e48:	60 e0       	ldi	r22, 0x00	; 0
     e4a:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_7, Status_Pin_High);	// G = 1
     e4e:	8f 81       	ldd	r24, Y+7	; 0x07
     e50:	61 e0       	ldi	r22, 0x01	; 1
     e52:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>

				break;
     e56:	af c0       	rjmp	.+350    	; 0xfb6 <Bcd_7segWriteNumCathode+0x298>
		case 4:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_Low);	// A = 0
     e58:	89 81       	ldd	r24, Y+1	; 0x01
     e5a:	60 e0       	ldi	r22, 0x00	; 0
     e5c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_High);	// B = 1
     e60:	8a 81       	ldd	r24, Y+2	; 0x02
     e62:	61 e0       	ldi	r22, 0x01	; 1
     e64:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_High);	// C = 1
     e68:	8b 81       	ldd	r24, Y+3	; 0x03
     e6a:	61 e0       	ldi	r22, 0x01	; 1
     e6c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_Low);	// D = 0
     e70:	8c 81       	ldd	r24, Y+4	; 0x04
     e72:	60 e0       	ldi	r22, 0x00	; 0
     e74:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_5, Status_Pin_Low);	// E = 0
     e78:	8d 81       	ldd	r24, Y+5	; 0x05
     e7a:	60 e0       	ldi	r22, 0x00	; 0
     e7c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_6, Status_Pin_High);	// F = 1
     e80:	8e 81       	ldd	r24, Y+6	; 0x06
     e82:	61 e0       	ldi	r22, 0x01	; 1
     e84:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_7, Status_Pin_High);	// G = 1
     e88:	8f 81       	ldd	r24, Y+7	; 0x07
     e8a:	61 e0       	ldi	r22, 0x01	; 1
     e8c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				break;
     e90:	92 c0       	rjmp	.+292    	; 0xfb6 <Bcd_7segWriteNumCathode+0x298>
		case 5:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_High);	// A = 1
     e92:	89 81       	ldd	r24, Y+1	; 0x01
     e94:	61 e0       	ldi	r22, 0x01	; 1
     e96:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_Low);	// B = 0
     e9a:	8a 81       	ldd	r24, Y+2	; 0x02
     e9c:	60 e0       	ldi	r22, 0x00	; 0
     e9e:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_High);	// C = 1
     ea2:	8b 81       	ldd	r24, Y+3	; 0x03
     ea4:	61 e0       	ldi	r22, 0x01	; 1
     ea6:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_High);	// D = 1
     eaa:	8c 81       	ldd	r24, Y+4	; 0x04
     eac:	61 e0       	ldi	r22, 0x01	; 1
     eae:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_5, Status_Pin_Low);	// E = 0
     eb2:	8d 81       	ldd	r24, Y+5	; 0x05
     eb4:	60 e0       	ldi	r22, 0x00	; 0
     eb6:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_6, Status_Pin_High);	// F = 1
     eba:	8e 81       	ldd	r24, Y+6	; 0x06
     ebc:	61 e0       	ldi	r22, 0x01	; 1
     ebe:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_7, Status_Pin_High);	// G = 1
     ec2:	8f 81       	ldd	r24, Y+7	; 0x07
     ec4:	61 e0       	ldi	r22, 0x01	; 1
     ec6:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
			break;
     eca:	75 c0       	rjmp	.+234    	; 0xfb6 <Bcd_7segWriteNumCathode+0x298>
		case 6:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_High);	// A = 1
     ecc:	89 81       	ldd	r24, Y+1	; 0x01
     ece:	61 e0       	ldi	r22, 0x01	; 1
     ed0:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_Low);	// B = 0
     ed4:	8a 81       	ldd	r24, Y+2	; 0x02
     ed6:	60 e0       	ldi	r22, 0x00	; 0
     ed8:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_High);	// C = 1
     edc:	8b 81       	ldd	r24, Y+3	; 0x03
     ede:	61 e0       	ldi	r22, 0x01	; 1
     ee0:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_High);	// D = 1
     ee4:	8c 81       	ldd	r24, Y+4	; 0x04
     ee6:	61 e0       	ldi	r22, 0x01	; 1
     ee8:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_5, Status_Pin_High);	// E = 1
     eec:	8d 81       	ldd	r24, Y+5	; 0x05
     eee:	61 e0       	ldi	r22, 0x01	; 1
     ef0:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_6, Status_Pin_High);	// F = 1
     ef4:	8e 81       	ldd	r24, Y+6	; 0x06
     ef6:	61 e0       	ldi	r22, 0x01	; 1
     ef8:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_7, Status_Pin_High);	// G = 1
     efc:	8f 81       	ldd	r24, Y+7	; 0x07
     efe:	61 e0       	ldi	r22, 0x01	; 1
     f00:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				break;
     f04:	58 c0       	rjmp	.+176    	; 0xfb6 <Bcd_7segWriteNumCathode+0x298>
		case 7:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_High);	// A = 1
     f06:	89 81       	ldd	r24, Y+1	; 0x01
     f08:	61 e0       	ldi	r22, 0x01	; 1
     f0a:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_High);	// B = 1
     f0e:	8a 81       	ldd	r24, Y+2	; 0x02
     f10:	61 e0       	ldi	r22, 0x01	; 1
     f12:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_High);	// C = 1
     f16:	8b 81       	ldd	r24, Y+3	; 0x03
     f18:	61 e0       	ldi	r22, 0x01	; 1
     f1a:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_Low);	// D = 0
     f1e:	8c 81       	ldd	r24, Y+4	; 0x04
     f20:	60 e0       	ldi	r22, 0x00	; 0
     f22:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_5, Status_Pin_Low);	// E = 0
     f26:	8d 81       	ldd	r24, Y+5	; 0x05
     f28:	60 e0       	ldi	r22, 0x00	; 0
     f2a:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_6, Status_Pin_Low);	// F = 0
     f2e:	8e 81       	ldd	r24, Y+6	; 0x06
     f30:	60 e0       	ldi	r22, 0x00	; 0
     f32:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_7, Status_Pin_Low);	// G = 0
     f36:	8f 81       	ldd	r24, Y+7	; 0x07
     f38:	60 e0       	ldi	r22, 0x00	; 0
     f3a:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				break;
     f3e:	3b c0       	rjmp	.+118    	; 0xfb6 <Bcd_7segWriteNumCathode+0x298>
		case 8:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_High);	// A = 1
     f40:	89 81       	ldd	r24, Y+1	; 0x01
     f42:	61 e0       	ldi	r22, 0x01	; 1
     f44:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_High);	// B = 1
     f48:	8a 81       	ldd	r24, Y+2	; 0x02
     f4a:	61 e0       	ldi	r22, 0x01	; 1
     f4c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_High);	// C = 1
     f50:	8b 81       	ldd	r24, Y+3	; 0x03
     f52:	61 e0       	ldi	r22, 0x01	; 1
     f54:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_High);	// D = 1
     f58:	8c 81       	ldd	r24, Y+4	; 0x04
     f5a:	61 e0       	ldi	r22, 0x01	; 1
     f5c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_5, Status_Pin_High);	// E = 1
     f60:	8d 81       	ldd	r24, Y+5	; 0x05
     f62:	61 e0       	ldi	r22, 0x01	; 1
     f64:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_6, Status_Pin_High);	// F = 1
     f68:	8e 81       	ldd	r24, Y+6	; 0x06
     f6a:	61 e0       	ldi	r22, 0x01	; 1
     f6c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_7, Status_Pin_High);	// G = 1
     f70:	8f 81       	ldd	r24, Y+7	; 0x07
     f72:	61 e0       	ldi	r22, 0x01	; 1
     f74:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
			break;
     f78:	1e c0       	rjmp	.+60     	; 0xfb6 <Bcd_7segWriteNumCathode+0x298>
		case 9:
				Dio_setPinVal(Copy7segNum.Pin_1, Status_Pin_High);	// A = 1
     f7a:	89 81       	ldd	r24, Y+1	; 0x01
     f7c:	61 e0       	ldi	r22, 0x01	; 1
     f7e:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_2, Status_Pin_High);	// B = 1
     f82:	8a 81       	ldd	r24, Y+2	; 0x02
     f84:	61 e0       	ldi	r22, 0x01	; 1
     f86:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_3, Status_Pin_High);	// C = 1
     f8a:	8b 81       	ldd	r24, Y+3	; 0x03
     f8c:	61 e0       	ldi	r22, 0x01	; 1
     f8e:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_4, Status_Pin_High);	// D = 1
     f92:	8c 81       	ldd	r24, Y+4	; 0x04
     f94:	61 e0       	ldi	r22, 0x01	; 1
     f96:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_5, Status_Pin_Low);	// E = 0
     f9a:	8d 81       	ldd	r24, Y+5	; 0x05
     f9c:	60 e0       	ldi	r22, 0x00	; 0
     f9e:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_6, Status_Pin_High);	// F = 1
     fa2:	8e 81       	ldd	r24, Y+6	; 0x06
     fa4:	61 e0       	ldi	r22, 0x01	; 1
     fa6:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
				Dio_setPinVal(Copy7segNum.Pin_7, Status_Pin_High);	// G = 1
     faa:	8f 81       	ldd	r24, Y+7	; 0x07
     fac:	61 e0       	ldi	r22, 0x01	; 1
     fae:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
			break;
     fb2:	01 c0       	rjmp	.+2      	; 0xfb6 <Bcd_7segWriteNumCathode+0x298>
		default:
			break;
     fb4:	00 00       	nop
	}
}
     fb6:	00 00       	nop
     fb8:	28 96       	adiw	r28, 0x08	; 8
     fba:	0f b6       	in	r0, 0x3f	; 63
     fbc:	f8 94       	cli
     fbe:	de bf       	out	0x3e, r29	; 62
     fc0:	0f be       	out	0x3f, r0	; 63
     fc2:	cd bf       	out	0x3d, r28	; 61
     fc4:	df 91       	pop	r29
     fc6:	cf 91       	pop	r28
     fc8:	0f 91       	pop	r16
     fca:	08 95       	ret

00000fcc <__vector_2>:
#include <avr/interrupt.h>

u8 Number = 0;

ISR(INT1_vect)
{
     fcc:	1f 92       	push	r1
     fce:	0f 92       	push	r0
     fd0:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     fd4:	0f 92       	push	r0
     fd6:	11 24       	eor	r1, r1
     fd8:	0f 93       	push	r16
     fda:	2f 93       	push	r18
     fdc:	3f 93       	push	r19
     fde:	4f 93       	push	r20
     fe0:	5f 93       	push	r21
     fe2:	6f 93       	push	r22
     fe4:	7f 93       	push	r23
     fe6:	8f 93       	push	r24
     fe8:	9f 93       	push	r25
     fea:	af 93       	push	r26
     fec:	bf 93       	push	r27
     fee:	ef 93       	push	r30
     ff0:	ff 93       	push	r31
     ff2:	cf 93       	push	r28
     ff4:	df 93       	push	r29
     ff6:	cd b7       	in	r28, 0x3d	; 61
     ff8:	de b7       	in	r29, 0x3e	; 62
	Number--;
     ffa:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <__data_end>
     ffe:	81 50       	subi	r24, 0x01	; 1
    1000:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__data_end>
	Bcd_7segWriteNumCathode(Seg_1_Cathod, Number);
    1004:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <__data_end>
    1008:	08 2f       	mov	r16, r24
    100a:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <Seg_1_Cathod>
    100e:	30 91 79 00 	lds	r19, 0x0079	; 0x800079 <Seg_1_Cathod+0x1>
    1012:	40 91 7a 00 	lds	r20, 0x007A	; 0x80007a <Seg_1_Cathod+0x2>
    1016:	50 91 7b 00 	lds	r21, 0x007B	; 0x80007b <Seg_1_Cathod+0x3>
    101a:	60 91 7c 00 	lds	r22, 0x007C	; 0x80007c <Seg_1_Cathod+0x4>
    101e:	70 91 7d 00 	lds	r23, 0x007D	; 0x80007d <Seg_1_Cathod+0x5>
    1022:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <Seg_1_Cathod+0x6>
    1026:	0e 94 8f 06 	call	0xd1e	; 0xd1e <Bcd_7segWriteNumCathode>
	if(Number == 10)
    102a:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <__data_end>
    102e:	8a 30       	cpi	r24, 0x0A	; 10
    1030:	11 f4       	brne	.+4      	; 0x1036 <__vector_2+0x6a>
	{
		Number = 0;
    1032:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__data_end>
	}

}
    1036:	00 00       	nop
    1038:	df 91       	pop	r29
    103a:	cf 91       	pop	r28
    103c:	ff 91       	pop	r31
    103e:	ef 91       	pop	r30
    1040:	bf 91       	pop	r27
    1042:	af 91       	pop	r26
    1044:	9f 91       	pop	r25
    1046:	8f 91       	pop	r24
    1048:	7f 91       	pop	r23
    104a:	6f 91       	pop	r22
    104c:	5f 91       	pop	r21
    104e:	4f 91       	pop	r20
    1050:	3f 91       	pop	r19
    1052:	2f 91       	pop	r18
    1054:	0f 91       	pop	r16
    1056:	0f 90       	pop	r0
    1058:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    105c:	0f 90       	pop	r0
    105e:	1f 90       	pop	r1
    1060:	18 95       	reti

00001062 <__vector_1>:

ISR(INT0_vect)
{
    1062:	1f 92       	push	r1
    1064:	0f 92       	push	r0
    1066:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    106a:	0f 92       	push	r0
    106c:	11 24       	eor	r1, r1
    106e:	0f 93       	push	r16
    1070:	2f 93       	push	r18
    1072:	3f 93       	push	r19
    1074:	4f 93       	push	r20
    1076:	5f 93       	push	r21
    1078:	6f 93       	push	r22
    107a:	7f 93       	push	r23
    107c:	8f 93       	push	r24
    107e:	9f 93       	push	r25
    1080:	af 93       	push	r26
    1082:	bf 93       	push	r27
    1084:	ef 93       	push	r30
    1086:	ff 93       	push	r31
    1088:	cf 93       	push	r28
    108a:	df 93       	push	r29
    108c:	cd b7       	in	r28, 0x3d	; 61
    108e:	de b7       	in	r29, 0x3e	; 62
	Bcd_7segWriteNumCathode(Seg_1_Cathod, Number);
    1090:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <__data_end>
    1094:	08 2f       	mov	r16, r24
    1096:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <Seg_1_Cathod>
    109a:	30 91 79 00 	lds	r19, 0x0079	; 0x800079 <Seg_1_Cathod+0x1>
    109e:	40 91 7a 00 	lds	r20, 0x007A	; 0x80007a <Seg_1_Cathod+0x2>
    10a2:	50 91 7b 00 	lds	r21, 0x007B	; 0x80007b <Seg_1_Cathod+0x3>
    10a6:	60 91 7c 00 	lds	r22, 0x007C	; 0x80007c <Seg_1_Cathod+0x4>
    10aa:	70 91 7d 00 	lds	r23, 0x007D	; 0x80007d <Seg_1_Cathod+0x5>
    10ae:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <Seg_1_Cathod+0x6>
    10b2:	0e 94 8f 06 	call	0xd1e	; 0xd1e <Bcd_7segWriteNumCathode>
	Number++;
    10b6:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <__data_end>
    10ba:	8f 5f       	subi	r24, 0xFF	; 255
    10bc:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__data_end>
	if(Number == 10)
    10c0:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <__data_end>
    10c4:	8a 30       	cpi	r24, 0x0A	; 10
    10c6:	11 f4       	brne	.+4      	; 0x10cc <__vector_1+0x6a>
	{
		Number = 0;
    10c8:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__data_end>
	}
}
    10cc:	00 00       	nop
    10ce:	df 91       	pop	r29
    10d0:	cf 91       	pop	r28
    10d2:	ff 91       	pop	r31
    10d4:	ef 91       	pop	r30
    10d6:	bf 91       	pop	r27
    10d8:	af 91       	pop	r26
    10da:	9f 91       	pop	r25
    10dc:	8f 91       	pop	r24
    10de:	7f 91       	pop	r23
    10e0:	6f 91       	pop	r22
    10e2:	5f 91       	pop	r21
    10e4:	4f 91       	pop	r20
    10e6:	3f 91       	pop	r19
    10e8:	2f 91       	pop	r18
    10ea:	0f 91       	pop	r16
    10ec:	0f 90       	pop	r0
    10ee:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    10f2:	0f 90       	pop	r0
    10f4:	1f 90       	pop	r1
    10f6:	18 95       	reti

000010f8 <INT_0_Init>:

void INT_0_Init(void)
{
    10f8:	cf 93       	push	r28
    10fa:	df 93       	push	r29
    10fc:	cd b7       	in	r28, 0x3d	; 61
    10fe:	de b7       	in	r29, 0x3e	; 62
	Dio_setPinDir(PortD_p2, Direction_Pin_Input);
    1100:	60 e0       	ldi	r22, 0x00	; 0
    1102:	8a e1       	ldi	r24, 0x1A	; 26
    1104:	0e 94 67 00 	call	0xce	; 0xce <Dio_setPinDir>
	Dio_setPinDir(PortC_p6,Direction_Pin_Output);
    1108:	61 e0       	ldi	r22, 0x01	; 1
    110a:	86 e1       	ldi	r24, 0x16	; 22
    110c:	0e 94 67 00 	call	0xce	; 0xce <Dio_setPinDir>
	Dio_setPinVal(PortC_p6, Status_Pin_Low);
    1110:	60 e0       	ldi	r22, 0x00	; 0
    1112:	86 e1       	ldi	r24, 0x16	; 22
    1114:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>

	GICR |= (1 << INT0);
    1118:	8b e5       	ldi	r24, 0x5B	; 91
    111a:	90 e0       	ldi	r25, 0x00	; 0
    111c:	2b e5       	ldi	r18, 0x5B	; 91
    111e:	30 e0       	ldi	r19, 0x00	; 0
    1120:	f9 01       	movw	r30, r18
    1122:	20 81       	ld	r18, Z
    1124:	20 64       	ori	r18, 0x40	; 64
    1126:	fc 01       	movw	r30, r24
    1128:	20 83       	st	Z, r18
	MCUCR |= (1 << ISC00) | (1 << ISC01);
    112a:	85 e5       	ldi	r24, 0x55	; 85
    112c:	90 e0       	ldi	r25, 0x00	; 0
    112e:	25 e5       	ldi	r18, 0x55	; 85
    1130:	30 e0       	ldi	r19, 0x00	; 0
    1132:	f9 01       	movw	r30, r18
    1134:	20 81       	ld	r18, Z
    1136:	23 60       	ori	r18, 0x03	; 3
    1138:	fc 01       	movw	r30, r24
    113a:	20 83       	st	Z, r18
	SREG |= (1 << 7);
    113c:	8f e5       	ldi	r24, 0x5F	; 95
    113e:	90 e0       	ldi	r25, 0x00	; 0
    1140:	2f e5       	ldi	r18, 0x5F	; 95
    1142:	30 e0       	ldi	r19, 0x00	; 0
    1144:	f9 01       	movw	r30, r18
    1146:	20 81       	ld	r18, Z
    1148:	20 68       	ori	r18, 0x80	; 128
    114a:	fc 01       	movw	r30, r24
    114c:	20 83       	st	Z, r18
}
    114e:	00 00       	nop
    1150:	df 91       	pop	r29
    1152:	cf 91       	pop	r28
    1154:	08 95       	ret

00001156 <INT_1_Init>:

void INT_1_Init(void)
{
    1156:	cf 93       	push	r28
    1158:	df 93       	push	r29
    115a:	cd b7       	in	r28, 0x3d	; 61
    115c:	de b7       	in	r29, 0x3e	; 62
	Dio_setPinDir(PortD_p3, Direction_Pin_Input);
    115e:	60 e0       	ldi	r22, 0x00	; 0
    1160:	8b e1       	ldi	r24, 0x1B	; 27
    1162:	0e 94 67 00 	call	0xce	; 0xce <Dio_setPinDir>
	Dio_setPinDir(PortC_p6,Direction_Pin_Output);
    1166:	61 e0       	ldi	r22, 0x01	; 1
    1168:	86 e1       	ldi	r24, 0x16	; 22
    116a:	0e 94 67 00 	call	0xce	; 0xce <Dio_setPinDir>

	Dio_setPinVal(PortC_p6, Status_Pin_Low);
    116e:	60 e0       	ldi	r22, 0x00	; 0
    1170:	86 e1       	ldi	r24, 0x16	; 22
    1172:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <Dio_setPinVal>
	GICR |= (1 << INT1);
    1176:	8b e5       	ldi	r24, 0x5B	; 91
    1178:	90 e0       	ldi	r25, 0x00	; 0
    117a:	2b e5       	ldi	r18, 0x5B	; 91
    117c:	30 e0       	ldi	r19, 0x00	; 0
    117e:	f9 01       	movw	r30, r18
    1180:	20 81       	ld	r18, Z
    1182:	20 68       	ori	r18, 0x80	; 128
    1184:	fc 01       	movw	r30, r24
    1186:	20 83       	st	Z, r18
	MCUCR |= (1 << ISC00) | (1 << ISC01);
    1188:	85 e5       	ldi	r24, 0x55	; 85
    118a:	90 e0       	ldi	r25, 0x00	; 0
    118c:	25 e5       	ldi	r18, 0x55	; 85
    118e:	30 e0       	ldi	r19, 0x00	; 0
    1190:	f9 01       	movw	r30, r18
    1192:	20 81       	ld	r18, Z
    1194:	23 60       	ori	r18, 0x03	; 3
    1196:	fc 01       	movw	r30, r24
    1198:	20 83       	st	Z, r18
	SREG |= (1 << 7);
    119a:	8f e5       	ldi	r24, 0x5F	; 95
    119c:	90 e0       	ldi	r25, 0x00	; 0
    119e:	2f e5       	ldi	r18, 0x5F	; 95
    11a0:	30 e0       	ldi	r19, 0x00	; 0
    11a2:	f9 01       	movw	r30, r18
    11a4:	20 81       	ld	r18, Z
    11a6:	20 68       	ori	r18, 0x80	; 128
    11a8:	fc 01       	movw	r30, r24
    11aa:	20 83       	st	Z, r18
}
    11ac:	00 00       	nop
    11ae:	df 91       	pop	r29
    11b0:	cf 91       	pop	r28
    11b2:	08 95       	ret

000011b4 <main>:


int main(void)
{
    11b4:	cf 93       	push	r28
    11b6:	df 93       	push	r29
    11b8:	cd b7       	in	r28, 0x3d	; 61
    11ba:	de b7       	in	r29, 0x3e	; 62
	Bcd_7segInit(Seg_1_Cathod);
    11bc:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <Seg_1_Cathod>
    11c0:	30 91 79 00 	lds	r19, 0x0079	; 0x800079 <Seg_1_Cathod+0x1>
    11c4:	40 91 7a 00 	lds	r20, 0x007A	; 0x80007a <Seg_1_Cathod+0x2>
    11c8:	50 91 7b 00 	lds	r21, 0x007B	; 0x80007b <Seg_1_Cathod+0x3>
    11cc:	60 91 7c 00 	lds	r22, 0x007C	; 0x80007c <Seg_1_Cathod+0x4>
    11d0:	70 91 7d 00 	lds	r23, 0x007D	; 0x80007d <Seg_1_Cathod+0x5>
    11d4:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <Seg_1_Cathod+0x6>
    11d8:	0e 94 18 02 	call	0x430	; 0x430 <Bcd_7segInit>


	INT_0_Init();
    11dc:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <INT_0_Init>
	INT_1_Init();
    11e0:	0e 94 ab 08 	call	0x1156	; 0x1156 <INT_1_Init>

	while(1)
	{

	}
    11e4:	ff cf       	rjmp	.-2      	; 0x11e4 <main+0x30>

000011e6 <__tablejump2__>:
    11e6:	ee 0f       	add	r30, r30
    11e8:	ff 1f       	adc	r31, r31
    11ea:	05 90       	lpm	r0, Z+
    11ec:	f4 91       	lpm	r31, Z
    11ee:	e0 2d       	mov	r30, r0
    11f0:	09 94       	ijmp

000011f2 <_exit>:
    11f2:	f8 94       	cli

000011f4 <__stop_program>:
    11f4:	ff cf       	rjmp	.-2      	; 0x11f4 <__stop_program>
