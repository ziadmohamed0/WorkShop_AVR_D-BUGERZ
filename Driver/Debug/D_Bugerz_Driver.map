Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o (exit)
/usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_tablejump2.o)
                              ./Hall/BCD/bcd_Prog.o (__tablejump2__)
/usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
                              ./Mcal/GPIO/dio_Prog.o (__do_copy_data)
/usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
                              ./Hall/BCD/bcd_Prog.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000008000 xr
data             0x0000000000800060 0x0000000000000800 rw !x
eeprom           0x0000000000810000 0x0000000000000400 rw !x
fuse             0x0000000000820000 0x0000000000000002 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
LOAD ./Mcal/GPIO/dio_Prog.o
LOAD ./Hall/BCD/bcd_Config.o
LOAD ./Hall/BCD/bcd_Prog.o
LOAD ./App/Main.o
START GROUP
LOAD /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega32.a
END GROUP
                0x0000000000000000                __TEXT_REGION_ORIGIN__ = DEFINED (__TEXT_REGION_ORIGIN__)?__TEXT_REGION_ORIGIN__:0x0
                [0x0000000000800060]                __DATA_REGION_ORIGIN__ = DEFINED (__DATA_REGION_ORIGIN__)?__DATA_REGION_ORIGIN__:0x800060
                [0x0000000000008000]                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                [0x0000000000000800]                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                [0x0000000000000400]                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000002]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x11f6
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table.Bcd_7segWriteNum
                0x0000000000000054       0x14 ./Hall/BCD/bcd_Prog.o
 .progmem.gcc_sw_table.Bcd_7segWriteNumAnode
                0x0000000000000068       0x14 ./Hall/BCD/bcd_Prog.o
 .progmem.gcc_sw_table.Bcd_7segWriteNumCathode
                0x000000000000007c       0x14 ./Hall/BCD/bcd_Prog.o
                0x0000000000000090                . = ALIGN (0x2)
                0x0000000000000090                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000090        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000090                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
                0x0000000000000090                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000090                __ctors_start = .
 *(.ctors)
                0x0000000000000090                __ctors_end = .
                0x0000000000000090                __dtors_start = .
 *(.dtors)
                0x0000000000000090                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000090        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
                0x0000000000000090                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000090        0xc /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000009c       0x16 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
                0x000000000000009c                __do_copy_data
 .init4         0x00000000000000b2       0x10 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
                0x00000000000000b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000c2        0x8 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
 *(.init9)
 *(.text)
 .text          0x00000000000000ca        0x4 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
                0x00000000000000ca                __vector_12
                0x00000000000000ca                __bad_interrupt
                0x00000000000000ca                __vector_6
                0x00000000000000ca                __vector_3
                0x00000000000000ca                __vector_11
                0x00000000000000ca                __vector_13
                0x00000000000000ca                __vector_17
                0x00000000000000ca                __vector_19
                0x00000000000000ca                __vector_7
                0x00000000000000ca                __vector_5
                0x00000000000000ca                __vector_4
                0x00000000000000ca                __vector_9
                0x00000000000000ca                __vector_15
                0x00000000000000ca                __vector_8
                0x00000000000000ca                __vector_14
                0x00000000000000ca                __vector_10
                0x00000000000000ca                __vector_16
                0x00000000000000ca                __vector_18
                0x00000000000000ca                __vector_20
 .text          0x00000000000000ce        0x0 ./Mcal/GPIO/dio_Prog.o
 .text          0x00000000000000ce        0x0 ./Hall/BCD/bcd_Config.o
 .text          0x00000000000000ce        0x0 ./Hall/BCD/bcd_Prog.o
 .text          0x00000000000000ce        0x0 ./App/Main.o
 .text          0x00000000000000ce        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text          0x00000000000000ce        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_tablejump2.o)
 .text          0x00000000000000ce        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text          0x00000000000000ce        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
                0x00000000000000ce                . = ALIGN (0x2)
 *(.text.*)
 .text.Dio_setPinDir
                0x00000000000000ce       0xe4 ./Mcal/GPIO/dio_Prog.o
                0x00000000000000ce                Dio_setPinDir
 .text.Dio_setPinVal
                0x00000000000001b2      0x14a ./Mcal/GPIO/dio_Prog.o
                0x00000000000001b2                Dio_setPinVal
 .text.Dio_getPinVal
                0x00000000000002fc       0x54 ./Mcal/GPIO/dio_Prog.o
                0x00000000000002fc                Dio_getPinVal
 .text.Dio_setPortDir
                0x0000000000000350       0x34 ./Mcal/GPIO/dio_Prog.o
                0x0000000000000350                Dio_setPortDir
 .text.Dio_setPortVal
                0x0000000000000384       0x34 ./Mcal/GPIO/dio_Prog.o
                0x0000000000000384                Dio_setPortVal
 .text.Dio_getPortVal
                0x00000000000003b8       0x34 ./Mcal/GPIO/dio_Prog.o
                0x00000000000003b8                Dio_getPortVal
 .text.Bcd_7segInit_4Bit
                0x00000000000003ec       0x44 ./Hall/BCD/bcd_Prog.o
                0x00000000000003ec                Bcd_7segInit_4Bit
 .text.Bcd_7segInit
                0x0000000000000430       0x6e ./Hall/BCD/bcd_Prog.o
                0x0000000000000430                Bcd_7segInit
 .text.Bcd_7segWriteNum
                0x000000000000049e      0x1ac ./Hall/BCD/bcd_Prog.o
                0x000000000000049e                Bcd_7segWriteNum
 .text.Bcd_7segWriteNumAnode
                0x000000000000064a      0x2ae ./Hall/BCD/bcd_Prog.o
                0x000000000000064a                Bcd_7segWriteNumAnode
 .text.Bcd_MPX_2Enable
                0x00000000000008f8       0x98 ./Hall/BCD/bcd_Prog.o
                0x00000000000008f8                Bcd_MPX_2Enable
 .text.Bcd_MPX_4Enable
                0x0000000000000990       0xe2 ./Hall/BCD/bcd_Prog.o
                0x0000000000000990                Bcd_MPX_4Enable
 .text.Bcd_MPX_6Enable
                0x0000000000000a72      0x130 ./Hall/BCD/bcd_Prog.o
                0x0000000000000a72                Bcd_MPX_6Enable
 .text.Bcd_MPX_8Enable
                0x0000000000000ba2      0x17c ./Hall/BCD/bcd_Prog.o
                0x0000000000000ba2                Bcd_MPX_8Enable
 .text.Bcd_7segWriteNumCathode
                0x0000000000000d1e      0x2ae ./Hall/BCD/bcd_Prog.o
                0x0000000000000d1e                Bcd_7segWriteNumCathode
 .text.__vector_2
                0x0000000000000fcc       0x96 ./App/Main.o
                0x0000000000000fcc                __vector_2
 .text.__vector_1
                0x0000000000001062       0x96 ./App/Main.o
                0x0000000000001062                __vector_1
 .text.INT_0_Init
                0x00000000000010f8       0x5e ./App/Main.o
                0x00000000000010f8                INT_0_Init
 .text.INT_1_Init
                0x0000000000001156       0x5e ./App/Main.o
                0x0000000000001156                INT_1_Init
 .text.main     0x00000000000011b4       0x32 ./App/Main.o
                0x00000000000011b4                main
 .text.libgcc.mul
                0x00000000000011e6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000011e6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000011e6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000011e6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000011e6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000011e6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000011e6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000011e6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.div
                0x00000000000011e6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc   0x00000000000011e6        0xc /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_tablejump2.o)
                0x00000000000011e6                __tablejump2__
 .text.libgcc.prologue
                0x00000000000011f2        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.builtins
                0x00000000000011f2        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.fmul
                0x00000000000011f2        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.fixed
                0x00000000000011f2        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.mul
                0x00000000000011f2        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000011f2        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000011f2        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000011f2        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000011f2        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000011f2        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000011f2        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000011f2        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000011f2        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000011f2        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000011f2        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000011f2        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000011f2        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000011f2        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
                0x00000000000011f2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000011f2        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
                0x00000000000011f2                exit
                0x00000000000011f2                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000011f2        0x4 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000011f6                _etext = .

.data           0x0000000000800060       0x2a load address 0x00000000000011f6
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
 .data          0x0000000000800060        0x0 ./Mcal/GPIO/dio_Prog.o
 .data          0x0000000000800060        0x0 ./Hall/BCD/bcd_Config.o
 .data          0x0000000000800060        0x0 ./Hall/BCD/bcd_Prog.o
 .data          0x0000000000800060        0x0 ./App/Main.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_tablejump2.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 .data.Arr_DDr  0x0000000000800060        0x8 ./Mcal/GPIO/dio_Prog.o
                0x0000000000800060                Arr_DDr
 .data.Arr_Port
                0x0000000000800068        0x8 ./Mcal/GPIO/dio_Prog.o
                0x0000000000800068                Arr_Port
 .data.Arr_Pin  0x0000000000800070        0x8 ./Mcal/GPIO/dio_Prog.o
                0x0000000000800070                Arr_Pin
 .data.Seg_1_Cathod
                0x0000000000800078        0x7 ./Hall/BCD/bcd_Config.o
                0x0000000000800078                Seg_1_Cathod
 .data.Seg_1_Anode
                0x000000000080007f        0x7 ./Hall/BCD/bcd_Config.o
                0x000000000080007f                Seg_1_Anode
 .data.BCD_1    0x0000000000800086        0x4 ./Hall/BCD/bcd_Config.o
                0x0000000000800086                BCD_1
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x000000000080008a                . = ALIGN (0x2)
                0x000000000080008a                _edata = .
                0x000000000080008a                PROVIDE (__data_end, .)

.bss            0x000000000080008a        0x1
                0x000000000080008a                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080008a        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
 .bss           0x000000000080008a        0x0 ./Mcal/GPIO/dio_Prog.o
 .bss           0x000000000080008a        0x0 ./Hall/BCD/bcd_Config.o
 .bss           0x000000000080008a        0x0 ./Hall/BCD/bcd_Prog.o
 .bss           0x000000000080008a        0x0 ./App/Main.o
 .bss           0x000000000080008a        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .bss           0x000000000080008a        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_tablejump2.o)
 .bss           0x000000000080008a        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .bss           0x000000000080008a        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.Number    0x000000000080008a        0x1 ./App/Main.o
                0x000000000080008a                Number
 *(COMMON)
                0x000000000080008b                PROVIDE (__bss_end, .)
                0x00000000000011f6                __data_load_start = LOADADDR (.data)
                0x0000000000001220                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080008b        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x000000000080008b                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x288c
 *(.stab)
 .stab          0x0000000000000000      0x84c ./Mcal/GPIO/dio_Prog.o
 .stab          0x000000000000084c      0x450 ./Hall/BCD/bcd_Config.o
                                        0x624 (size before relaxing)
 .stab          0x0000000000000c9c     0x159c ./Hall/BCD/bcd_Prog.o
                                       0x18b4 (size before relaxing)
 .stab          0x0000000000002238      0x654 ./App/Main.o
                                        0x828 (size before relaxing)

.stabstr        0x0000000000000000     0x1fb6
 *(.stabstr)
 .stabstr       0x0000000000000000     0x1fb6 ./Mcal/GPIO/dio_Prog.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./Mcal/GPIO/dio_Prog.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 ./Hall/BCD/bcd_Config.o
 .comment       0x0000000000000011       0x12 ./Hall/BCD/bcd_Prog.o
 .comment       0x0000000000000011       0x12 ./App/Main.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x4e6
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x4e6 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o

.debug_abbrev   0x0000000000000000      0x4a3
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x4a3 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o

.debug_line     0x0000000000000000       0x1a
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1a /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x196
 *(.debug_str)
 .debug_str     0x0000000000000000      0x196 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(D_Bugerz_Driver.elf elf32-avr)
LOAD linker stubs
